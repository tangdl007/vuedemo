{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/globalAPI.js","../src/compiler/prase.js","../src/compiler/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["let strats = {};\nconst LIFECYCLE = [\n    \"beforeCreated\",\n    'created'\n]\nLIFECYCLE.forEach(hook => {\n    strats[hook] = function (p, c) {\n        if (c) {\n            if (p) {\n                return p.concat(c); //并不会返回值\n            } else {\n                return [c];\n            }\n        } else {\n            return p;\n        }\n    }\n})\nexport function mergerOptions(parent, child) {\n    let options = {};\n    for (let key in parent) {\n        mergeField(key)\n    }\n\n    for (let key in child) {\n        if (!parent.hasOwnProperty(key)) {\n            mergeField(key)\n        }\n    }\n\n    function mergeField(key) {\n        if (strats[key]) {\n            options[key] = strats[key](parent[key], child[key])\n        } else {\n            options[key] = child[key] || parent[key];\n        }\n    }\n\n    return options;\n}\n\n\n//用户的选项和全局的配置合并都一起","import { mergerOptions } from \"./utils\";\n\n\n\n\nexport function initGlobalAPi(Vue) {\n    Vue.options = {};\n    Vue.mixin = function (mixin) {  \n        this.options = mergerOptions(this.options, mixin);\n        return this;\n    }\n\n    //创建一个组件的构造函数 可以直接进行挂载\n    Vue.extend = function(options){\n\n        function Sub(options = {}){  //最终使用一个组件就是new一个实例\n            this._init(options);\n        }\n\n        Sub.prototype = Object.create(Vue.prototype); //复用原型\n        Sub.prototype.constructor = Sub;\n\n        Sub.options = options;\n\n        return Sub;\n    }\n    Vue.options.components = {};\n\n    // 创建一个组件在模板中使用\n    Vue.component = function(id,definition){  \n        definition = typeof definition == 'function'? definition:Vue.extend(definition);\n        Vue.options.components[id] = definition;  //保存在 options.components\n    }\n}\n\n\n\n\n\n\n","//正则表达式\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);  //匹配到的是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); //结束标签\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; //匹配属性\nconst startTagClose = /^\\s*(\\/?)>/;\n\n\n//这是语法的转移不是dom的转义   利用栈形结构来构造一棵树  \nexport function parseHTML(html){ //解析一个删除一个 知道没有解析的为止\n\n    const ELEMENT_TYPE = 1;\n    const TEXT_TYPE = 3;\n    const stack = [];\n    let currentParent;\n    let root;\n\n    function createASTElement(tag,attrs){\n        return {\n            tag,\n            type:ELEMENT_TYPE,\n            children:[],\n            attrs,\n            parent:null\n        }\n    }\n\n\n    function start(tag,attrs){\n        let node = createASTElement(tag,attrs);\n        if(!root){\n            root = node;\n        }\n        if(currentParent){\n            node.parent = currentParent;\n            currentParent.children.push(node);\n        }\n        stack.push(node);\n        currentParent = node;\n    }\n\n    function chars(text){\n        text = text.replace(/\\s/g,'');\n        text && currentParent.children.push({\n            type:TEXT_TYPE,\n            text,\n            parent:currentParent\n        })\n    }\n\n    function end(){\n        stack.pop();\n        currentParent = stack[stack.length - 1];\n    }\n\n\n\n\n    function advance(n){\n        html = html.substring(n); //匹配一点截取一点\n    }\n    function parseStart(){\n        const start = html.match(startTagOpen);\n        if(start){\n            const match = {\n                tagName:start[1],   //标签名\n                attrs:[]\n            }\n            advance(start[0].length);\n\n            let attr,end;  //赋值的话加一个括号就行 匹配的值\n            while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))){  //如果标签没有结束就一直匹配\n                advance(attr[0].length);\n                match.attrs.push({name:attr[1],value:attr[3] || attr[4] || attr[5] || true});\n            }\n    \n            if(end){\n                advance(end[0].length);\n            }\n            return match;\n        }\n\n        return false;\n    }\n    while(html){    \n        //如果为0则是标签开始的位置，如果大于0  文本结束的位置\n        let textEnd = html.indexOf(\"<\");\n\n        if(textEnd == 0){\n            const startTagMatch = parseStart();\n            if(startTagMatch){\n                start(startTagMatch.tagName,startTagMatch.attrs);\n                continue;\n            }\n\n            let endTagMatch = html.match(endTag);\n            if(endTagMatch){\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1])\n                continue;\n            }\n\n        }\n\n        if(textEnd > 0){\n            let text = html.substring(0,textEnd);\n            if(text){\n                chars(text);\n                advance(text.length);\n            }\n        }\n    }\n    return root;\n}","import { parseHTML } from \"./prase\";\n\n\nfunction genProps(attrs){\n    let str = \"\";\n    for(let i=0;i<attrs.length;i++){\n        let attr = attrs[i];\n\n        if(attr.name == 'style'){  //重写value的值\n            let obj = {};\n            attr.value.split(\";\").forEach(item => {\n                let [key,value] = item.split(\":\")\n                obj[key] = value\n            });\n            attr.value = obj;\n        }   \n        \n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0,-1)}}`   //去掉最后一个\n}\n\n\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\nfunction gen(node){\n    if(node.type == 1){\n        return codeGen(node);\n    }else{\n        let text = node.text;\n        if(!defaultTagRE.test(text)){\n            return `_v(${JSON.stringify(text)})`\n        }else{\n            let token = [];\n            let match;\n            defaultTagRE.lastIndex = 0; //每次匹配过后，lastindex会往前加1\n            let lastIndex = 0;\n            while(match = defaultTagRE.exec(text)){\n                let index = match.index;\n                if(index > lastIndex){\n                    token.push(JSON.stringify(text.slice(lastIndex,index))) \n                }\n                token.push(`_s(${match[1].trim()})`)\n                lastIndex = index + match[0].length;\n            } //是起始的位置  lastindex  中间的内容进行截取\n            if(lastIndex < text.length){\n                token.push(JSON.stringify(text.slice(lastIndex)));\n            }\n            return `_v(${token.join(\"+\")})`\n        }\n\n    }\n}\n\nfunction genChildren(children){\n    return children.map(child => gen(child)).join(\",\");   //数组转换为字符串 join  字符串转化为数组 split\n}\n\n\n\nfunction codeGen(ast) {\n    let children = genChildren(ast.children);\n\n\n    let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : null}${ast.children.length?`,${children}`:''})`);\n\n    return code;\n}\n\n\n\n//模版引擎的实现原理就是 with +  new Function\n\n\nexport function compileToFunction(template) {\n    let ast = parseHTML(template);\n    //生成字符串  _c  _v  _s\n    let code = codeGen(ast);\n    code = `with(this){return ${code}}`\n    let render = new Function(code); \n\n    return render;\n}\n\n\n\n","\n\nlet id = 0;\nclass Dep{\n    constructor(){\n        this.id = id++;\n        this.subs = []; //这里存放着属性对应的watcher\n    }\n    depend(){\n        Dep.target.addDep(this);//记录dep  计算属性和清理操作的时候要用\n    }\n    addSub(watcher){\n        this.subs.push(watcher);\n    }\n    notify(){\n        this.subs.forEach(watcher => watcher.update())\n    }\n}\n\n\n//用到的属性才会收集 没有用到的就不会收集\n\nDep.target = null;\n\n\nlet stack = [];\nexport function pushTarget(watcher){\n    stack.push(watcher);\n    Dep.target = watcher;\n}\nexport function popTarget(watcher){\n    stack.pop();\n    Dep.target = stack[stack.length - 1];\n}\n\nexport default Dep;","import Dep, { popTarget, pushTarget } from \"./dep\";\n\n//局部更新 提高性能\nlet id = 0;\n\nclass Watcher {\n    constructor(vm, exprOrFn, options, cb) {  //每个组件都会new watcher\n        this.id = id++;\n\n        this.renderWatcher = options;//是否为渲染watcher\n\n        if(typeof exprOrFn == 'string'){\n            this.getter = function(){\n                return vm[exprOrFn]\n            }\n        }else{\n            this.getter = exprOrFn;\n        }\n        this.deps = [];  //实现计算属性和清理工作需要用到\n        this.depsId = new Set();\n        this.lazy = options.lazy;\n        this.cb = cb;\n        this.dirty = this.lazy;\n        this.vm = vm;\n        this.user = options.user;\n\n        this.value = this.lazy ? undefined : this.get();\n\n    }\n    evaluate() {\n        this.value = this.get();\n        this.dirty = false;\n    }\n    get() {  //get方法的时候会进行依赖收集 那么改变的时候回执行这个watcher\n        pushTarget(this);\n        let value = this.getter.call(this.vm);\n        popTarget();\n        return value;\n    }\n    depend() {\n        let i = this.deps.length;\n        while (i--) {\n            this.deps[i].depend();  //让计算属性watcher也收集渲染watcher\n        }\n    }\n    addDep(dep) {  //既要保证不重复  又要保证双向  \n        let id = dep.id;\n        if (!this.depsId.has(id)) {   //在watcher进行去重\n            this.depsId.add(id);\n            this.deps.push(dep);\n            dep.addSub(this);\n        }\n    }\n    update() {\n        //实现异步更新的操作   update无论走多少次 更新操作只有一次\n        if (this.lazy) {\n            this.dirty = true;\n        } else {\n            queueWatcher(this);\n        }\n    }\n    run() {\n        let oldValue = this.value;\n        let newValue = this.get();\n        if(this.user){\n            this.cb.call(this.vm,newValue,oldValue);\n        }\n    }\n}\n\nlet queue = [];\nlet has = {};\nlet pending = false;\n\nfunction flushSchedulerQueue() {\n    let flushQueue = queue.slice(0);   //拷贝\n    queue = [];\n    has = {};\n    pending = false;\n    flushQueue.forEach(q => q.run());\n}\nfunction queueWatcher(watcher) {\n    let id = watcher.id;\n    if (!has[id]) {  //相同的watcher不用重复的去刷新\n        has[id] = true;\n        queue.push(watcher);\n\n        if (!pending) {\n            nextTick(flushSchedulerQueue);\n            pending = true;\n        }\n    }\n}\n\nlet waiting = false;\nlet callbacks = [];\nlet flushCallbacks = function () {\n    waiting = false;\n    let cbs = callbacks.slice(0);//拷贝\n    callbacks = [];\n    cbs.forEach(cb => {\n        cb();\n    })\n}\n\nlet timerFunc;\nif (Promise) {\n    timerFunc = () => {\n        Promise.resolve().then(flushCallbacks);\n    }\n} else if (MutationObserver) {\n    let observer = new MutationObserver(flushCallbacks);\n    let textNode = document.createTextNode(1);\n    observer.observe(textNode, {\n        characterData: true\n    })\n    timerFunc = () => {\n        textNode.textContent = 2;\n    }\n} else if (setImmediate) {\n    timerFunc = () => {\n        setImmediate(flushCallbacks)\n    }\n} else {\n    timerFunc = () => {\n        setTimeout(flushCallbacks);\n    }\n}\n\nexport function nextTick(cb) {    //先用户的还是先内部的  异步更新操作 不一定  那个在先那个就先执行\n    callbacks.push(cb);\n    if (!waiting) {\n        timerFunc(flushCallbacks);\n        waiting = true;\n    }\n}\n\n// mixin 可以混入一些公共的方法  数据来源不明确   \n// 计算属性根本就不会去收集依赖而是让自己的依赖去收集依赖\n// 异步更新 取最后的值\n\n\n\n\n\n\n\n\n\nexport default Watcher;","export function createElementVNode(vm,tag,data,...children){\n    if(data == null){\n        data = {}\n    }\n    let key = data.key; \n    if(key){\n        delete data.key\n    }\n    return vnode(vm,tag,key,data,children);\n}\n\n\nexport function createTextVNode(vm,text){\n    return vnode(vm,undefined,undefined,undefined,undefined,text)\n}\n\n\nexport function isSameVnode(vnode1,vnode2){\n    return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key;\n}\n\n\n//ast是语法层面上的转化  描述的语法本身\n//虚拟dom描述的是dom元素  可以增加一些自定义属性\n\n\nfunction vnode(vm,tag,key,data,children,text){\n    return {\n        vm,\n        tag,\n        key,\n        data,\n        children,\n        text\n    }\n}\n","import { isSameVnode } from \".\";\n\nexport function createElm(vnode) {\n    let { tag, data, children, text } = vnode;\n    if (typeof tag == 'string') {\n        vnode.el = document.createElement(tag);  //将虚拟节点和真实节点联系起来  \n        patchProps(vnode.el,{}, data);\n        vnode.children.forEach(child => {  //递归进行创建\n            vnode.el.appendChild(createElm(child));\n        });\n    } else {\n        vnode.el = document.createTextNode(text);\n    }\n    return vnode.el;   //真实节点\n}\nexport function patchProps(el,oldProps = {},props={}) {\n    //老的有新的没有直接删除 对应的el就是元素本身   尽量复用老的  \n    let oldStyles = oldProps.style || {};\n    let newStyles = props.style || {};\n    for(let key in oldStyles){\n        if(!newStyles[key]){\n            el.style[key] = \"\";\n        }\n    }\n\n    for(let key in oldProps){\n        if(!props[key]){\n            el.removeAttribute(key);\n        }\n    }\n\n    //新的覆盖老的\n    for (let key in props) {\n        if (key == 'style') {\n            for (let styleName in props.style) {\n                el.style[styleName] = props.style[styleName];\n            }\n        } else {\n            el.setAttribute(key, props[key]);\n        }\n    }\n}\n\nexport function patch(oldVnode, vnode) {\n    const isRealElement = oldVnode.nodeType;\n\n    if (isRealElement) {\n        const elm = oldVnode;\n        const parentElm = elm.parentNode;\n\n        let newElm = createElm(vnode);\n\n        parentElm.insertBefore(newElm, elm.nextSibling)\n        parentElm.removeChild(elm)\n\n\n        return newElm;\n    } else {\n\n        return patchVnode(oldVnode,vnode);\n\n    }\n}\n\nfunction  patchVnode(oldVnode,vnode){\n    //不是相同节点\n    if (!isSameVnode(oldVnode, vnode)) {\n        let el = createElm(vnode);\n        oldVnode.el.parentNode.replaceChild(el, oldVnode.el);\n        return el;\n    }\n\n\n    //文本节点还是元素节点\n    let el = vnode.el = oldVnode.el;\n    if (!oldVnode.tag) {\n        if (oldVnode.text !== vnode.text) {\n            el.textContent = vnode.text;  //用新的文本替换掉老的文本\n        }\n    }\n    \n    //是标签比较属性\n    patchProps(el,oldVnode.data,vnode.data);\n\n\n    //比较儿子 一个有儿子一个没有  两个都有儿子 两个都没有\n\n    let oldChildren = oldVnode.children || [];\n    let newChildren = vnode.children || [];\n\n    if(oldChildren.length > 0 && newChildren.length > 0){\n        updateChildren(el,oldChildren,newChildren);\n    }else if(newChildren.length > 0){\n        mountChildren(el,newChildren);\n    }else if(oldChildren.length > 0){\n        el.innerHTML = \"\";\n    }\n\n\n    return el;\n}\n\nfunction mountChildren(el,newChildren){\n    for(let i=0;i<newChildren.length;i++){\n        let child = newChildren[i];\n        el.appendChild(createElm(child));\n    }\n}\n\n\nfunction updateChildren(el,oldChildren,newChildren){\n    //头指针超过尾指针就结束\n    let oldStartIndex = 0;\n    let newStartIndex = 0;\n    let oldEndIndex = oldChildren.length - 1;\n    let newEndIndex = newChildren.length - 1;\n\n    let oldStartVnode = oldChildren[0];\n    let newStartVnode = newChildren[0];\n\n    let oldEndVnode = oldChildren[oldEndIndex];\n    let newEndVnode = newChildren[newEndIndex];\n\n    function makeIndexByKey(children){\n        let map = {};\n        children.forEach((child,index) => {\n            map[child.key] = index\n        })\n        return map\n    }\n\n    let map = makeIndexByKey(oldChildren); //key对应的索引 老的  a:1\n\n\n\n    while(oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex){  //头指针超过尾指针的时候就结束\n        if(!oldStartVnode){  //为空的情况进行处理\n            oldStartVnode = oldChildren[++oldStartIndex]\n        }else if(!oldEndVnode){\n            oldEndVnode = oldChildren[--oldEndIndex]\n        }else if(isSameVnode(oldStartVnode,newStartVnode)){\n            patchVnode(oldStartVnode,newStartVnode);\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newStartVnode = newChildren[++newStartIndex];\n        }else if(isSameVnode(oldEndVnode,newEndVnode)){  //尾尾比\n            patchVnode(oldEndVnode,newEndVnode);\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newEndVnode = newChildren[--newEndIndex];\n        }else if(isSameVnode(oldEndVnode,newStartVnode)){ //交叉比  老的尾与新的头比较 比较完后往前追加\n            patchVnode(oldEndVnode,newStartVnode);\n            el.insertBefore(oldEndVnode.el,oldStartVnode.el)\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newStartVnode = newChildren[++newStartIndex];\n        }else if(isSameVnode(oldStartVnode,newEndVnode)){//老的头和新的尾比较\n            patchVnode(oldStartVnode,newEndVnode);\n            el.insertBefore(oldStartVnode.el,oldEndVnode.el.nextSibling);  //a插入到b的前面  \n            newEndVnode = newChildren[--newEndIndex];\n            oldStartVnode = oldChildren[++oldStartIndex]; \n        }else {\n            let moveIndex = map[newStartVnode.key];\n            if(moveIndex !== undefined){\n                let moveVnode = oldChildren[moveIndex];\n                el.insertBefore(moveVnode.el,oldStartVnode.el);\n                oldChildren[moveIndex] = undefined; //不能删 删了就会数组塌陷\n                patchVnode(moveVnode,newStartVnode);\n            }else{\n                el.insertBefore(createElm(newStartVnode),oldStartVnode.el)\n            }\n    \n            newStartVnode = newChildren[++newStartIndex];  //尽可能的复用老的 以老的为标准  找到就移动找不到就插入\n        }\n        \n    }\n    if(newStartIndex <= newEndIndex){\n        for(let i = newStartIndex;i <= newEndIndex;i++){\n            let childEl = createElm(newChildren[i]);\n\n            let anchor = newChildren[newStartIndex + 1]?newChildren[newStartIndex + 1].el:null\n  \n            el.insertBefore(childEl,anchor); //为null就是appendChild\n        }\n    }\n    if(oldStartIndex <= oldEndIndex){\n        for(let i=oldStartIndex;i<=oldEndIndex;i++){\n            if(oldChildren[i]){\n                let oldEl = oldChildren[i].el;\n                el.removeChild(oldEl);\n            }\n        }\n    }\n}\n\n\n\n\n\n//虚拟dom之间的比较  尽可能的复用老的 提升性能\n//根节点是不是一致的 不是一致的新的覆盖老的  key 和 tag  标签是不是一致的\n//节点如果是一致的 元素节点和文本节点  元素节点 比较props  两点  老的有的新的没有直接去除 新的覆盖老的\n//比较儿子  头头比较 双指针的方式  头指针大于尾指针的时候结束  尾尾比较  交叉比较\n//老的尾和新的头比较\n//永远都往头指针做插入\n//如果批量向页面中插入内容 浏览器会自动优化\n//组件渲染原理\n\n\n\n/* \n    说下diff算法吧  两个虚拟dom之间的比较 尽可能的复用老的节约性能\n\n\n    采取的是双指针的方式进行比较  头头和头比较 比较节点 key tag  文本节点\n    元素节点 属性比较 老的有新的没有去除  \n    然后在比较儿子\n        头和头比较 头指针超过尾指针就结束\n        尾和尾比较  \n        交叉比较\n        乱序比较 将老做一个映射关系  新的最前面  当前头指针的最前面  \n    不加key 会有bug 比如复用错误 \n    循环列表 勾选状态  苹果 香蕉 梨  火龙果  就被勾选了\n    \n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","\nimport Watcher from \"./observe/watcher\";\nimport { createElementVNode, createTextVNode } from \"./vdom\";\nimport { patch } from \"./vdom/patch\"\n\n\n\n\nexport function initLifeCycle(Vue) {\n    Vue.prototype._update = function (vnode) {\n        const vm = this;\n        const el = vm.$el;\n\n        const prevVnode = vm._vnode;\n        vm._vnode = vnode\n        \n        if(prevVnode){\n            vm.$el = patch(prevVnode,vnode);\n        }else{\n            vm.$el = patch(el, vnode); \n        }\n\n\n\n    }\n    Vue.prototype._c = function () {\n        return createElementVNode(this, ...arguments);\n    }\n    Vue.prototype._v = function () {\n        return createTextVNode(this, ...arguments);\n    }\n    Vue.prototype._s = function (value) {\n        if (typeof value !== 'object') return value;\n        return JSON.stringify(value);\n    }\n    Vue.prototype._render = function () {\n        let vm = this;\n        //当渲染的时候会去实例中取值  将属性和视图绑定在一起\n        return vm.$options.render.call(vm);\n    }\n}\n\n\nexport function mountComponent(vm, el) {\n    vm.$el = el;\n\n\n    const updateComponent = () => {\n        vm._update(vm._render());\n    }\n\n    new Watcher(vm, updateComponent, true);\n\n}\n\n\n\n/*    依赖收集\n    对每一个属性增加一个dep属性\n    页面渲染的时候，将渲染逻辑放到watcher中\n    dep记录这个watcher，属性发生变化之后用dep找到这个watcher进行重新渲染即可\n*/\n\nexport function callHook(vm, hook) {  //调用钩子函数\n    let handlers = vm.$options[hook];\n    if (handlers) {\n        handlers.forEach(handler => handler.call(vm));\n    }\n}\n\n\n","//重写数组中的部分方法\nlet oldArrayProto = Array.prototype;\n\nexport let newArrayProto = Object.create(oldArrayProto); //在自己的身上改不在array本身上改变\n\n\n//能够改变array本身的方法\nlet methods = [\n    \"push\",\n    \"pop\",  //移除最后一个元素，并返回该元素\n    \"shift\",//删除第一个元素并返回\n    \"unshift\",\n    \"reverse\",\n    \"sort\",\n    \"splice\"  //删除添加元素  查询的位置  删除的个数 新增的元素\n] //concat slice都不会改变数组本身\n\n//切片编程  自己实现一个功能 把原有功能放进去  可以追加功能  实现切片编程\n\n\n\nmethods.forEach(method => {\n    newArrayProto[method] = function(...args){ //实例调用的方法 \n        const result = oldArrayProto[method].call(this,...args); //在里面调用this的指向就有问题  切片编程\n\n        //新增的元素进行属性的劫持\n        let inserted;\n        let ob = this.__ob__;\n        switch (method) {\n            case \"push\":\n            case \"unshift\":\n                inserted = args;\n            case \"splice\":\n                inserted = args.slice(2);\n            default:\n                break;\n        }\n\n        if(inserted){\n            ob.observeArr(inserted);\n        }\n\n        //更新\n        ob.dep.notify();\n        return result;\n    }\n})","import { newArrayProto } from \"./array\";\nimport Dep from \"./dep\";\n\nclass Observer{\n    constructor(data){\n        //新增一个属性希望能够更行 $set\n\n        this.dep = new Dep();\n\n\n        //object.defineProperty只能对已经存在的属性进行劫持 对于新增和删除的属性不能进行劫持  $set $delete\n        Object.defineProperty(data,\"__ob__\",{\n            value:this,\n            enumerable:false   //不可枚举 循环取不到\n        })\n        // data.__ob__ = this; //如果数组有__ob__则说明数据并观测过了   如果是对象的话进入死循环\n        //数组的方法进行拦截  在中间加了一个\n        if(Array.isArray(data)){\n            this.observeArr(data);\n            data.__proto__ = newArrayProto;\n        }else{\n            this.walk(data)\n        }\n    }\n    walk(data){ //循环对象对属性进行劫持\n        //重新定义属性  性能消耗点  这也是为什么换成vue3换成proxy后性能明显提升的原因\n        Object.keys(data).forEach(key => defineReactive(data,key,data[key]))\n    }\n    observeArr(data){\n        data.forEach(item => observe(item));   //数组的每一项也要进行属性的劫持\n    }\n}\n\n\nfunction dependArrar(value){\n    for(let i=0;i<value.length;i++){\n        let current = value[i];\n        current.__ob__ && current.__ob__.dep.depend();\n        if(Array.isArray(current)){\n            dependArrar(current);\n        }\n    }\n}\nexport function defineReactive(target,key,value){ //闭包 这里的执行栈并没有被销毁 get和set方法能拿到value\n    let childOb = observe(value);\n    let dep = new Dep();  //每一个属性增加一个dep属性  一起进行依赖的收集\n    Object.defineProperty(target,key,{\n        get(){\n            if(Dep.target){\n                dep.depend(); //属性收集器记住当前的watcher\n                if(childOb){\n                    childOb.dep.depend(); //让数组和对象本身也实现依赖收集\n\n                    if(Array.isArray(value)){\n                        dependArrar(value)\n                    }\n                }\n            }\n            return value\n        },\n        set(newValue){\n            if(value === newValue)return;\n            value = newValue;\n            dep.notify(); // 通知更新\n        }\n    })\n}\n\nexport function observe (data){\n    //只对对象进行属性劫持\n    if(typeof data !== 'object' || data == null)return;\n    \n    if(data.__ob__ instanceof Observer)return data.__ob__; //被观测过了 直接return\n\n    return new Observer(data);\n}\n\n//异步更新的操作\n\n//不存在的属性监控不到 存在属性重写方法\n\n\n//不存在的属性监控不到   存在的属性重写方法\n\n\n// 虚拟节点的比对\n\n\n\n\n\n","import Dep from \"./observe/dep.js\";\nimport { observe } from \"./observe/index.js\";\nimport Watcher, { nextTick } from \"./observe/watcher.js\";\n\nexport function initState(vm) {\n    let opts = vm.$options;\n    if (opts.data) {\n        initData(vm);\n    }\n    if (opts.computed) {\n        initComputed(vm);\n    }\n    if(opts.watch){\n        initWatch(vm);\n    }\n}\n\nfunction initWatch(vm){\n    let watch = vm.$options.watch;\n    \n    for(let key in watch){\n        const handler = watch[key]; //数组、字符串、函数\n        \n        if(Array.isArray(handler)){\n            for(let i=0;i<handler.length;i++){\n                createWatcher(vm,key,handler[i])\n            }\n        }else{\n            createWatcher(vm,key,handler)\n        }\n    }\n}\n\nfunction createWatcher(vm,key,handler){\n    //字符串 数组 函数\n    if(typeof handler == 'string'){\n        handler = vm[handler]\n    }\n\n    return vm.$watch(key,handler)\n}\n\nfunction Proxy(vm, target, key) {\n    Object.defineProperty(vm, key, {\n        get() {  //取值取_data上的值\n            return vm[target][key]\n        },\n        set(newValue) { //设置值设置_data上的值\n            if (newValue === vm[target][key]) return;\n            vm[target][key] = newValue\n        }\n    })\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data;\n    data = typeof data === 'function' ? data.call(vm) : data;  //vm调用的\n    vm._data = data;  //在实例上进行属性的劫持\n    observe(data);\n\n    //vm._data上的数据进行代理\n\n    for (let key in data) {\n        Proxy(vm, '_data', key)\n    }\n}\n\n\nfunction initComputed(vm) {\n    const computed = vm.$options.computed;\n    const watchers = vm._computedWatchers = {};\n    for (let key in computed) {\n        let userDef = computed[key]; //值可能是函数也可能是对象 对象要分get和set  函数这是get\n\n        //计算属性也要有一个watcher\n        let fn = typeof userDef == 'function' ? userDef : userDef.get;\n        watchers[key] = new Watcher(vm, fn, { lazy: true });//将属性和watcher对应起来\n\n        defineComputed(vm, key, userDef);\n    }\n}\n\nfunction defineComputed(target, key, userDef) {\n    const setter = userDef.set || (() => { });\n\n    //可以通过实例拿到对应的属性\n    Object.defineProperty(target, key, {\n        get: createComputedGetter(key),\n        set: setter\n    })\n}\n\nfunction createComputedGetter(key) {\n    return function () {\n        const watcher = this._computedWatchers[key];\n        if (watcher.dirty) {\n            watcher.evaluate()\n        }\n        if (Dep.target) { //计算属性出栈后还有渲染watcher\n            watcher.depend();\n        }\n\n        return watcher.value;\n    }\n}\n\nexport function initStateMixin(Vue){\n    Vue.prototype.$nextTick = nextTick;\n    Vue.prototype.$watch = function(exprOrFn,cb){\n        //属性的值改变之后 直接执行cb就行\n        new Watcher(this,exprOrFn,{user:true},cb); //用户自己写的watcher\n    }\n}\n\n\n\n//首先初始化数据  vue2 兼容ie9以上  vue3抛弃了ie   proxy进行属性劫持\n\n\n//一个计算属性对应一个watcher 并且放到实例上\n\n\n\n/* \n    computed就是带有dirty属性的watcher\n        两种形式 一个对象 这个函数就是getter setter就是空函数\n        属性发生变化的时候\n        渲染watcher收集到\n    \n    \n\n\n*/","import { compileToFunction } from \"./compiler\";\nimport { callHook, mountComponent } from \"./lifecycle\";\nimport { initState } from \"./state\";\nimport { mergerOptions } from \"./utils\";\n\nexport function initMixin(Vue){\n    Vue.prototype._init = function(options){  //原型中的this指的都是实例\n        const vm = this;\n        vm.$options = mergerOptions(this.constructor.options,options);  //$表示vue里面的变量  将用户的选项挂载到实例上\n        \n        callHook(vm,\"beforeCreated\");\n        //初始化数据\n        initState(vm);\n        callHook(vm,'created');   //这里面就已经执行了\n\n\n        if(options.el){\n            vm.$mount(options.el);  //实现数据的挂载 第一次合并的时候父亲就是\n        }\n    }\n\n\n    Vue.prototype.$mount = function(el){\n        const vm = this;\n        el = document.querySelector(el);\n        let opts = vm.$options;\n        if(!opts.render){\n            let template\n            if(!opts.template && el){\n                template = el.outerHTML;\n            }else{\n                if(el){\n                    template = opts.template;\n                }\n            }\n            //先找render 再找template  再找el outerHTML\n\n            //如果有模板就进行编译\n\n            if(template && el){\n                const render = compileToFunction(template);\n                opts.render = render\n            }\n        }   \n\n        mountComponent(vm,el); //组件的挂载\n    }\n}\n\n\n\n//初始化  状态初始化  data初始化\n","import { initGlobalAPi } from \"./globalAPI\";\nimport { initMixin } from \"./init\"\nimport { initLifeCycle } from \"./lifecycle\";\nimport { initStateMixin } from \"./state\";\n\nfunction Vue(options) {\n    this._init(options)\n}\n\n\ninitMixin(Vue); //初始化方法   通过方法来进行传递\ninitLifeCycle(Vue);\ninitGlobalAPi(Vue);\ninitStateMixin(Vue);\n\n\n\n\nexport default Vue;\n"],"names":["strats","LIFECYCLE","forEach","hook","p","c","concat","mergerOptions","parent","child","options","key","mergeField","hasOwnProperty","initGlobalAPi","Vue","mixin","extend","Sub","_init","prototype","Object","create","constructor","components","component","id","definition","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStart","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","item","JSON","stringify","slice","defaultTagRE","gen","codeGen","test","token","lastIndex","exec","index","trim","join","genChildren","map","ast","code","compileToFunction","template","render","Function","Dep","subs","target","addDep","watcher","update","pushTarget","popTarget","Watcher","vm","exprOrFn","cb","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","undefined","get","call","depend","dep","has","add","addSub","queueWatcher","oldValue","newValue","queue","pending","flushSchedulerQueue","flushQueue","q","run","nextTick","waiting","callbacks","flushCallbacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","createElementVNode","data","vnode","createTextVNode","isSameVnode","vnode1","vnode2","createElm","el","createElement","patchProps","appendChild","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","patch","oldVnode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVnode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","childEl","anchor","oldEl","initLifeCycle","_update","$el","prevVnode","_vnode","_c","arguments","_v","_s","_render","$options","mountComponent","updateComponent","callHook","handlers","handler","oldArrayProto","Array","newArrayProto","methods","method","args","result","inserted","ob","__ob__","observeArr","notify","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","dependArrar","current","childOb","set","initState","opts","initData","computed","initComputed","watch","initWatch","createWatcher","$watch","Proxy","_data","watchers","_computedWatchers","userDef","fn","defineComputed","setter","createComputedGetter","evaluate","initStateMixin","$nextTick","initMixin","$mount","querySelector","outerHTML"],"mappings":";;;;;;IAAA,IAAIA,MAAM,GAAG,EAAb,CAAA;IACA,IAAMC,SAAS,GAAG,CACd,eADc,EAEd,SAFc,CAAlB,CAAA;IAIAA,SAAS,CAACC,OAAV,CAAkB,UAAAC,IAAI,EAAI;IACtBH,EAAAA,MAAM,CAACG,IAAD,CAAN,GAAe,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IAC3B,IAAA,IAAIA,CAAJ,EAAO;IACH,MAAA,IAAID,CAAJ,EAAO;IACH,QAAA,OAAOA,CAAC,CAACE,MAAF,CAASD,CAAT,CAAP,CADG;IAEN,OAFD,MAEO;IACH,QAAO,OAAA,CAACA,CAAD,CAAP,CAAA;IACH,OAAA;IACJ,KAND,MAMO;IACH,MAAA,OAAOD,CAAP,CAAA;IACH,KAAA;IACJ,GAVD,CAAA;IAWH,CAZD,CAAA,CAAA;IAaO,SAASG,aAAT,CAAuBC,MAAvB,EAA+BC,KAA/B,EAAsC;IACzC,EAAIC,IAAAA,OAAO,GAAG,EAAd,CAAA;;IACA,EAAA,KAAK,IAAIC,GAAT,IAAgBH,MAAhB,EAAwB;IACpBI,IAAAA,UAAU,CAACD,GAAD,CAAV,CAAA;IACH,GAAA;;IAED,EAAA,KAAK,IAAIA,IAAT,IAAgBF,KAAhB,EAAuB;IACnB,IAAA,IAAI,CAACD,MAAM,CAACK,cAAP,CAAsBF,IAAtB,CAAL,EAAiC;IAC7BC,MAAAA,UAAU,CAACD,IAAD,CAAV,CAAA;IACH,KAAA;IACJ,GAAA;;IAED,EAASC,SAAAA,UAAT,CAAoBD,GAApB,EAAyB;IACrB,IAAA,IAAIX,MAAM,CAACW,GAAD,CAAV,EAAiB;IACbD,MAAAA,OAAO,CAACC,GAAD,CAAP,GAAeX,MAAM,CAACW,GAAD,CAAN,CAAYH,MAAM,CAACG,GAAD,CAAlB,EAAyBF,KAAK,CAACE,GAAD,CAA9B,CAAf,CAAA;IACH,KAFD,MAEO;IACHD,MAAAA,OAAO,CAACC,GAAD,CAAP,GAAeF,KAAK,CAACE,GAAD,CAAL,IAAcH,MAAM,CAACG,GAAD,CAAnC,CAAA;IACH,KAAA;IACJ,GAAA;;IAED,EAAA,OAAOD,OAAP,CAAA;IACH;;IClCM,SAASI,aAAT,CAAuBC,GAAvB,EAA4B;IAC/BA,EAAAA,GAAG,CAACL,OAAJ,GAAc,EAAd,CAAA;;IACAK,EAAAA,GAAG,CAACC,KAAJ,GAAY,UAAUA,KAAV,EAAiB;IACzB,IAAKN,IAAAA,CAAAA,OAAL,GAAeH,aAAa,CAAC,KAAKG,OAAN,EAAeM,KAAf,CAA5B,CAAA;IACA,IAAA,OAAO,IAAP,CAAA;IACH,GAHD,CAF+B;;;IAQ/BD,EAAAA,GAAG,CAACE,MAAJ,GAAa,UAASP,OAAT,EAAiB;IAE1B,IAAA,SAASQ,GAAT,GAA0B;IAAA,MAAbR,IAAAA,OAAa,uEAAH,EAAG,CAAA;;IAAG;IACzB,MAAKS,IAAAA,CAAAA,KAAL,CAAWT,OAAX,CAAA,CAAA;IACH,KAAA;;IAEDQ,IAAAA,GAAG,CAACE,SAAJ,GAAgBC,MAAM,CAACC,MAAP,CAAcP,GAAG,CAACK,SAAlB,CAAhB,CAN0B;;IAO1BF,IAAAA,GAAG,CAACE,SAAJ,CAAcG,WAAd,GAA4BL,GAA5B,CAAA;IAEAA,IAAAA,GAAG,CAACR,OAAJ,GAAcA,OAAd,CAAA;IAEA,IAAA,OAAOQ,GAAP,CAAA;IACH,GAZD,CAAA;;IAaAH,EAAAA,GAAG,CAACL,OAAJ,CAAYc,UAAZ,GAAyB,EAAzB,CArB+B;;IAwB/BT,EAAAA,GAAG,CAACU,SAAJ,GAAgB,UAASC,EAAT,EAAYC,UAAZ,EAAuB;IACnCA,IAAAA,UAAU,GAAG,OAAOA,UAAP,IAAqB,UAArB,GAAiCA,UAAjC,GAA4CZ,GAAG,CAACE,MAAJ,CAAWU,UAAX,CAAzD,CAAA;IACAZ,IAAAA,GAAG,CAACL,OAAJ,CAAYc,UAAZ,CAAuBE,EAAvB,CAAA,GAA6BC,UAA7B,CAFmC;IAGtC,GAHD,CAAA;IAIH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICjCD;IACA,IAAMC,MAAM,GAAZ,8BAAA,CAAA;IACA,IAAMC,YAAY,GAAA,MAAA,CAAA,MAAA,CAAUD,MAAV,EAAA,OAAA,CAAA,CAAA,MAAA,CAAwBA,MAAxB,EAAlB,GAAA,CAAA,CAAA;IACA,IAAME,YAAY,GAAG,IAAIC,MAAJ,aAAgBF,YAAhB,CAAA,CAArB;;IACA,IAAMG,MAAM,GAAG,IAAID,MAAJ,gBAAmBF,YAAnB,EAAA,QAAA,CAAA,CAAf;;IACA,IAAMI,SAAS,GAAG,2EAAlB;;IACA,IAAMC,aAAa,GAAG,YAAtB;;IAIO,SAASC,SAAT,CAAmBC,IAAnB,EAAwB;IAAE;IAE7B,EAAMC,IAAAA,YAAY,GAAG,CAArB,CAAA;IACA,EAAMC,IAAAA,SAAS,GAAG,CAAlB,CAAA;IACA,EAAMC,IAAAA,KAAK,GAAG,EAAd,CAAA;IACA,EAAA,IAAIC,aAAJ,CAAA;IACA,EAAA,IAAIC,IAAJ,CAAA;;IAEA,EAAA,SAASC,gBAAT,CAA0BC,GAA1B,EAA8BC,KAA9B,EAAoC;IAChC,IAAO,OAAA;IACHD,MAAAA,GAAG,EAAHA,GADG;IAEHE,MAAAA,IAAI,EAACR,YAFF;IAGHS,MAAAA,QAAQ,EAAC,EAHN;IAIHF,MAAAA,KAAK,EAALA,KAJG;IAKHpC,MAAAA,MAAM,EAAC,IAAA;IALJ,KAAP,CAAA;IAOH,GAAA;;IAGD,EAAA,SAASuC,KAAT,CAAeJ,GAAf,EAAmBC,KAAnB,EAAyB;IACrB,IAAA,IAAII,IAAI,GAAGN,gBAAgB,CAACC,GAAD,EAAKC,KAAL,CAA3B,CAAA;;IACA,IAAG,IAAA,CAACH,IAAJ,EAAS;IACLA,MAAAA,IAAI,GAAGO,IAAP,CAAA;IACH,KAAA;;IACD,IAAA,IAAGR,aAAH,EAAiB;IACbQ,MAAAA,IAAI,CAACxC,MAAL,GAAcgC,aAAd,CAAA;IACAA,MAAAA,aAAa,CAACM,QAAd,CAAuBG,IAAvB,CAA4BD,IAA5B,CAAA,CAAA;IACH,KAAA;;IACDT,IAAAA,KAAK,CAACU,IAAN,CAAWD,IAAX,CAAA,CAAA;IACAR,IAAAA,aAAa,GAAGQ,IAAhB,CAAA;IACH,GAAA;;IAED,EAASE,SAAAA,KAAT,CAAeC,IAAf,EAAoB;IAChBA,IAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAmB,EAAnB,CAAP,CAAA;IACAD,IAAAA,IAAI,IAAIX,aAAa,CAACM,QAAd,CAAuBG,IAAvB,CAA4B;IAChCJ,MAAAA,IAAI,EAACP,SAD2B;IAEhCa,MAAAA,IAAI,EAAJA,IAFgC;IAGhC3C,MAAAA,MAAM,EAACgC,aAAAA;IAHyB,KAA5B,CAAR,CAAA;IAKH,GAAA;;IAED,EAAA,SAASa,GAAT,GAAc;IACVd,IAAAA,KAAK,CAACe,GAAN,EAAA,CAAA;IACAd,IAAAA,aAAa,GAAGD,KAAK,CAACA,KAAK,CAACgB,MAAN,GAAe,CAAhB,CAArB,CAAA;IACH,GAAA;;IAKD,EAASC,SAAAA,OAAT,CAAiBC,CAAjB,EAAmB;IACfrB,IAAAA,IAAI,GAAGA,IAAI,CAACsB,SAAL,CAAeD,CAAf,CAAP,CADe;IAElB,GAAA;;IACD,EAAA,SAASE,UAAT,GAAqB;IACjB,IAAA,IAAMZ,KAAK,GAAGX,IAAI,CAACwB,KAAL,CAAW9B,YAAX,CAAd,CAAA;;IACA,IAAA,IAAGiB,KAAH,EAAS;IACL,MAAA,IAAMa,KAAK,GAAG;IACVC,QAAAA,OAAO,EAACd,KAAK,CAAC,CAAD,CADH;IACU;IACpBH,QAAAA,KAAK,EAAC,EAAA;IAFI,OAAd,CAAA;IAIAY,MAAAA,OAAO,CAACT,KAAK,CAAC,CAAD,CAAL,CAASQ,MAAV,CAAP,CAAA;;IAEA,MAAA,IAAIO,IAAJ,EAAST,IAAT,CAPK;;;IAQL,MAAA,OAAM,EAAEA,IAAG,GAAGjB,IAAI,CAACwB,KAAL,CAAW1B,aAAX,CAAR,MAAuC4B,IAAI,GAAG1B,IAAI,CAACwB,KAAL,CAAW3B,SAAX,CAA9C,CAAN,EAA2E;IAAG;IAC1EuB,QAAAA,OAAO,CAACM,IAAI,CAAC,CAAD,CAAJ,CAAQP,MAAT,CAAP,CAAA;IACAK,QAAAA,KAAK,CAAChB,KAAN,CAAYK,IAAZ,CAAiB;IAACc,UAAAA,IAAI,EAACD,IAAI,CAAC,CAAD,CAAV;IAAcE,UAAAA,KAAK,EAACF,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAf,IAAsBA,IAAI,CAAC,CAAD,CAA1B,IAAiC,IAAA;IAArD,SAAjB,CAAA,CAAA;IACH,OAAA;;IAED,MAAA,IAAGT,IAAH,EAAO;IACHG,QAAAA,OAAO,CAACH,IAAG,CAAC,CAAD,CAAH,CAAOE,MAAR,CAAP,CAAA;IACH,OAAA;;IACD,MAAA,OAAOK,KAAP,CAAA;IACH,KAAA;;IAED,IAAA,OAAO,KAAP,CAAA;IACH,GAAA;;IACD,EAAA,OAAMxB,IAAN,EAAW;IACP;IACA,IAAA,IAAI6B,OAAO,GAAG7B,IAAI,CAAC8B,OAAL,CAAa,GAAb,CAAd,CAAA;;IAEA,IAAGD,IAAAA,OAAO,IAAI,CAAd,EAAgB;IACZ,MAAME,IAAAA,aAAa,GAAGR,UAAU,EAAhC,CAAA;;IACA,MAAA,IAAGQ,aAAH,EAAiB;IACbpB,QAAAA,KAAK,CAACoB,aAAa,CAACN,OAAf,EAAuBM,aAAa,CAACvB,KAArC,CAAL,CAAA;IACA,QAAA,SAAA;IACH,OAAA;;IAED,MAAA,IAAIwB,WAAW,GAAGhC,IAAI,CAACwB,KAAL,CAAW5B,MAAX,CAAlB,CAAA;;IACA,MAAA,IAAGoC,WAAH,EAAe;IACXZ,QAAAA,OAAO,CAACY,WAAW,CAAC,CAAD,CAAX,CAAeb,MAAhB,CAAP,CAAA;IACAF,QAAAA,GAAG,CAACe,WAAW,CAAC,CAAD,CAAZ,CAAH,CAAA;IACA,QAAA,SAAA;IACH,OAAA;IAEJ,KAAA;;IAED,IAAGH,IAAAA,OAAO,GAAG,CAAb,EAAe;IACX,MAAId,IAAAA,IAAI,GAAGf,IAAI,CAACsB,SAAL,CAAe,CAAf,EAAiBO,OAAjB,CAAX,CAAA;;IACA,MAAA,IAAGd,IAAH,EAAQ;IACJD,QAAAA,KAAK,CAACC,IAAD,CAAL,CAAA;IACAK,QAAAA,OAAO,CAACL,IAAI,CAACI,MAAN,CAAP,CAAA;IACH,OAAA;IACJ,KAAA;IACJ,GAAA;;IACD,EAAA,OAAOd,IAAP,CAAA;IACH;;IC/GD,SAAS4B,QAAT,CAAkBzB,KAAlB,EAAwB;IACpB,EAAI0B,IAAAA,GAAG,GAAG,EAAV,CAAA;;IACA,EAAA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC3B,KAAK,CAACW,MAApB,EAA2BgB,CAAC,EAA5B,EAA+B;IAC3B,IAAA,IAAIT,IAAI,GAAGlB,KAAK,CAAC2B,CAAD,CAAhB,CAAA;;IAEA,IAAA,IAAGT,IAAI,CAACC,IAAL,IAAa,OAAhB,EAAwB;IAAA,MAAA,CAAA,YAAA;IAAG;IACvB,QAAIS,IAAAA,GAAG,GAAG,EAAV,CAAA;IACAV,QAAAA,IAAI,CAACE,KAAL,CAAWS,KAAX,CAAiB,GAAjB,CAAA,CAAsBvE,OAAtB,CAA8B,UAAAwE,IAAI,EAAI;IAClC,UAAA,IAAA,WAAA,GAAkBA,IAAI,CAACD,KAAL,CAAW,GAAX,CAAlB;IAAA,cAAA,YAAA,GAAA,cAAA,CAAA,WAAA,EAAA,CAAA,CAAA;IAAA,cAAK9D,GAAL,GAAA,YAAA,CAAA,CAAA,CAAA;IAAA,cAASqD,KAAT,GAAA,YAAA,CAAA,CAAA,CAAA,CAAA;;IACAQ,UAAAA,GAAG,CAAC7D,GAAD,CAAH,GAAWqD,KAAX,CAAA;IACH,SAHD,CAAA,CAAA;IAIAF,QAAAA,IAAI,CAACE,KAAL,GAAaQ,GAAb,CAAA;IANoB,OAAA,GAAA,CAAA;IAOvB,KAAA;;IAEDF,IAAAA,GAAG,IAAA,EAAA,CAAA,MAAA,CAAOR,IAAI,CAACC,IAAZ,EAAoBY,GAAAA,CAAAA,CAAAA,MAAAA,CAAAA,IAAI,CAACC,SAAL,CAAed,IAAI,CAACE,KAApB,CAApB,EAAH,GAAA,CAAA,CAAA;IACH,GAAA;;IACD,EAAWM,OAAAA,GAAAA,CAAAA,MAAAA,CAAAA,GAAG,CAACO,KAAJ,CAAU,CAAV,EAAY,CAAC,CAAb,CAAX,EAAA,GAAA,CAAA,CAhBoB;IAiBvB,CAAA;;IAGD,IAAMC,YAAY,GAAG,0BAArB,CAAA;;IACA,SAASC,GAAT,CAAa/B,IAAb,EAAkB;IACd,EAAA,IAAGA,IAAI,CAACH,IAAL,IAAa,CAAhB,EAAkB;IACd,IAAOmC,OAAAA,OAAO,CAAChC,IAAD,CAAd,CAAA;IACH,GAFD,MAEK;IACD,IAAA,IAAIG,IAAI,GAAGH,IAAI,CAACG,IAAhB,CAAA;;IACA,IAAA,IAAG,CAAC2B,YAAY,CAACG,IAAb,CAAkB9B,IAAlB,CAAJ,EAA4B;IACxB,MAAA,OAAA,KAAA,CAAA,MAAA,CAAawB,IAAI,CAACC,SAAL,CAAezB,IAAf,CAAb,EAAA,GAAA,CAAA,CAAA;IACH,KAFD,MAEK;IACD,MAAI+B,IAAAA,KAAK,GAAG,EAAZ,CAAA;IACA,MAAA,IAAItB,KAAJ,CAAA;IACAkB,MAAAA,YAAY,CAACK,SAAb,GAAyB,CAAzB,CAHC;;IAID,MAAIA,IAAAA,SAAS,GAAG,CAAhB,CAAA;;IACA,MAAMvB,OAAAA,KAAK,GAAGkB,YAAY,CAACM,IAAb,CAAkBjC,IAAlB,CAAd,EAAsC;IAClC,QAAA,IAAIkC,KAAK,GAAGzB,KAAK,CAACyB,KAAlB,CAAA;;IACA,QAAGA,IAAAA,KAAK,GAAGF,SAAX,EAAqB;IACjBD,UAAAA,KAAK,CAACjC,IAAN,CAAW0B,IAAI,CAACC,SAAL,CAAezB,IAAI,CAAC0B,KAAL,CAAWM,SAAX,EAAqBE,KAArB,CAAf,CAAX,CAAA,CAAA;IACH,SAAA;;IACDH,QAAAA,KAAK,CAACjC,IAAN,CAAiBW,KAAAA,CAAAA,MAAAA,CAAAA,KAAK,CAAC,CAAD,CAAL,CAAS0B,IAAT,EAAjB,EAAA,GAAA,CAAA,CAAA,CAAA;IACAH,QAAAA,SAAS,GAAGE,KAAK,GAAGzB,KAAK,CAAC,CAAD,CAAL,CAASL,MAA7B,CAAA;IACH,OAZA;;;IAaD,MAAA,IAAG4B,SAAS,GAAGhC,IAAI,CAACI,MAApB,EAA2B;IACvB2B,QAAAA,KAAK,CAACjC,IAAN,CAAW0B,IAAI,CAACC,SAAL,CAAezB,IAAI,CAAC0B,KAAL,CAAWM,SAAX,CAAf,CAAX,CAAA,CAAA;IACH,OAAA;;IACD,MAAA,OAAA,KAAA,CAAA,MAAA,CAAaD,KAAK,CAACK,IAAN,CAAW,GAAX,CAAb,EAAA,GAAA,CAAA,CAAA;IACH,KAAA;IAEJ,GAAA;IACJ,CAAA;;IAED,SAASC,WAAT,CAAqB1C,QAArB,EAA8B;IAC1B,EAAA,OAAOA,QAAQ,CAAC2C,GAAT,CAAa,UAAAhF,KAAK,EAAA;IAAA,IAAIsE,OAAAA,GAAG,CAACtE,KAAD,CAAP,CAAA;IAAA,GAAlB,EAAkC8E,IAAlC,CAAuC,GAAvC,CAAP,CAD0B;IAE7B,CAAA;;IAID,SAASP,OAAT,CAAiBU,GAAjB,EAAsB;IAClB,EAAA,IAAI5C,QAAQ,GAAG0C,WAAW,CAACE,GAAG,CAAC5C,QAAL,CAA1B,CAAA;IAGA,EAAA,IAAI6C,IAAI,GAAA,MAAA,CAAA,MAAA,CAAWD,GAAG,CAAC/C,GAAf,EAAuB+C,IAAAA,CAAAA,CAAAA,MAAAA,CAAAA,GAAG,CAAC9C,KAAJ,CAAUW,MAAV,GAAmB,CAAnB,GAAuBc,QAAQ,CAACqB,GAAG,CAAC9C,KAAL,CAA/B,GAA6C,IAApE,SAA2E8C,GAAG,CAAC5C,QAAJ,CAAaS,MAAb,GAAA,GAAA,CAAA,MAAA,CAAwBT,QAAxB,CAAA,GAAmC,EAA9G,EAAR,GAAA,CAAA,CAAA;IAEA,EAAA,OAAO6C,IAAP,CAAA;IACH;;;IAOM,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;IACxC,EAAA,IAAIH,GAAG,GAAGvD,SAAS,CAAC0D,QAAD,CAAnB,CADwC;;IAGxC,EAAA,IAAIF,IAAI,GAAGX,OAAO,CAACU,GAAD,CAAlB,CAAA;IACAC,EAAAA,IAAI,GAAwBA,oBAAAA,CAAAA,MAAAA,CAAAA,IAAxB,EAAJ,GAAA,CAAA,CAAA;IACA,EAAA,IAAIG,MAAM,GAAG,IAAIC,QAAJ,CAAaJ,IAAb,CAAb,CAAA;IAEA,EAAA,OAAOG,MAAP,CAAA;IACH;;IC/ED,IAAIpE,IAAE,GAAG,CAAT,CAAA;;QACMsE;IACF,EAAa,SAAA,GAAA,GAAA;IAAA,IAAA,eAAA,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;;IACT,IAAKtE,IAAAA,CAAAA,EAAL,GAAUA,IAAE,EAAZ,CAAA;IACA,IAAA,IAAA,CAAKuE,IAAL,GAAY,EAAZ,CAFS;IAGZ,GAAA;;;;eACD,SAAQ,MAAA,GAAA;IACJD,MAAAA,GAAG,CAACE,MAAJ,CAAWC,MAAX,CAAkB,IAAlB,EADI;IAEP,KAAA;;;IACD,IAAA,KAAA,EAAA,SAAA,MAAA,CAAOC,OAAP,EAAe;IACX,MAAA,IAAA,CAAKH,IAAL,CAAUhD,IAAV,CAAemD,OAAf,CAAA,CAAA;IACH,KAAA;;;eACD,SAAQ,MAAA,GAAA;IACJ,MAAA,IAAA,CAAKH,IAAL,CAAU/F,OAAV,CAAkB,UAAAkG,OAAO,EAAA;IAAA,QAAIA,OAAAA,OAAO,CAACC,MAAR,EAAJ,CAAA;IAAA,OAAzB,CAAA,CAAA;IACH,KAAA;;;;IAIL,CAAA,EAAA,CAAA;;;IAEAL,GAAG,CAACE,MAAJ,GAAa,IAAb,CAAA;IAGA,IAAI3D,KAAK,GAAG,EAAZ,CAAA;IACO,SAAS+D,UAAT,CAAoBF,OAApB,EAA4B;IAC/B7D,EAAAA,KAAK,CAACU,IAAN,CAAWmD,OAAX,CAAA,CAAA;IACAJ,EAAAA,GAAG,CAACE,MAAJ,GAAaE,OAAb,CAAA;IACH,CAAA;IACM,SAASG,SAAT,CAAmBH,OAAnB,EAA2B;IAC9B7D,EAAAA,KAAK,CAACe,GAAN,EAAA,CAAA;IACA0C,EAAAA,GAAG,CAACE,MAAJ,GAAa3D,KAAK,CAACA,KAAK,CAACgB,MAAN,GAAe,CAAhB,CAAlB,CAAA;IACH;;IC9BD,IAAI7B,EAAE,GAAG,CAAT,CAAA;;QAEM8E;IACF,EAAA,SAAA,OAAA,CAAYC,EAAZ,EAAgBC,QAAhB,EAA0BhG,OAA1B,EAAmCiG,EAAnC,EAAuC;IAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;;IAAG;IACtC,IAAKjF,IAAAA,CAAAA,EAAL,GAAUA,EAAE,EAAZ,CAAA;IAEA,IAAA,IAAA,CAAKkF,aAAL,GAAqBlG,OAArB,CAHmC;;IAKnC,IAAA,IAAG,OAAOgG,QAAP,IAAmB,QAAtB,EAA+B;IAC3B,MAAKG,IAAAA,CAAAA,MAAL,GAAc,YAAU;IACpB,QAAOJ,OAAAA,EAAE,CAACC,QAAD,CAAT,CAAA;IACH,OAFD,CAAA;IAGH,KAJD,MAIK;IACD,MAAKG,IAAAA,CAAAA,MAAL,GAAcH,QAAd,CAAA;IACH,KAAA;;IACD,IAAA,IAAA,CAAKI,IAAL,GAAY,EAAZ,CAZmC;;IAanC,IAAA,IAAA,CAAKC,MAAL,GAAc,IAAIC,GAAJ,EAAd,CAAA;IACA,IAAA,IAAA,CAAKC,IAAL,GAAYvG,OAAO,CAACuG,IAApB,CAAA;IACA,IAAKN,IAAAA,CAAAA,EAAL,GAAUA,EAAV,CAAA;IACA,IAAKO,IAAAA,CAAAA,KAAL,GAAa,IAAA,CAAKD,IAAlB,CAAA;IACA,IAAKR,IAAAA,CAAAA,EAAL,GAAUA,EAAV,CAAA;IACA,IAAA,IAAA,CAAKU,IAAL,GAAYzG,OAAO,CAACyG,IAApB,CAAA;IAEA,IAAKnD,IAAAA,CAAAA,KAAL,GAAa,IAAKiD,CAAAA,IAAL,GAAYG,SAAZ,GAAwB,IAAKC,CAAAA,GAAL,EAArC,CAAA;IAEH,GAAA;;;;eACD,SAAW,QAAA,GAAA;IACP,MAAA,IAAA,CAAKrD,KAAL,GAAa,IAAKqD,CAAAA,GAAL,EAAb,CAAA;IACA,MAAKH,IAAAA,CAAAA,KAAL,GAAa,KAAb,CAAA;IACH,KAAA;;;eACD,SAAM,GAAA,GAAA;IAAG;IACLZ,MAAAA,UAAU,CAAC,IAAD,CAAV,CAAA;IACA,MAAItC,IAAAA,KAAK,GAAG,IAAK6C,CAAAA,MAAL,CAAYS,IAAZ,CAAiB,IAAKb,CAAAA,EAAtB,CAAZ,CAAA;IACAF,MAAAA,SAAS,EAAA,CAAA;IACT,MAAA,OAAOvC,KAAP,CAAA;IACH,KAAA;;;eACD,SAAS,MAAA,GAAA;IACL,MAAA,IAAIO,CAAC,GAAG,IAAKuC,CAAAA,IAAL,CAAUvD,MAAlB,CAAA;;IACA,MAAOgB,OAAAA,CAAC,EAAR,EAAY;IACR,QAAA,IAAA,CAAKuC,IAAL,CAAUvC,CAAV,CAAagD,CAAAA,MAAb,GADQ;IAEX,OAAA;IACJ,KAAA;;;IACD,IAAA,KAAA,EAAA,SAAA,MAAA,CAAOC,GAAP,EAAY;IAAG;IACX,MAAA,IAAI9F,EAAE,GAAG8F,GAAG,CAAC9F,EAAb,CAAA;;IACA,MAAI,IAAA,CAAC,KAAKqF,MAAL,CAAYU,GAAZ,CAAgB/F,EAAhB,CAAL,EAA0B;IAAI;IAC1B,QAAA,IAAA,CAAKqF,MAAL,CAAYW,GAAZ,CAAgBhG,EAAhB,CAAA,CAAA;IACA,QAAA,IAAA,CAAKoF,IAAL,CAAU7D,IAAV,CAAeuE,GAAf,CAAA,CAAA;IACAA,QAAAA,GAAG,CAACG,MAAJ,CAAW,IAAX,CAAA,CAAA;IACH,OAAA;IACJ,KAAA;;;eACD,SAAS,MAAA,GAAA;IACL;IACA,MAAI,IAAA,IAAA,CAAKV,IAAT,EAAe;IACX,QAAKC,IAAAA,CAAAA,KAAL,GAAa,IAAb,CAAA;IACH,OAFD,MAEO;IACHU,QAAAA,YAAY,CAAC,IAAD,CAAZ,CAAA;IACH,OAAA;IACJ,KAAA;;;eACD,SAAM,GAAA,GAAA;IACF,MAAIC,IAAAA,QAAQ,GAAG,IAAA,CAAK7D,KAApB,CAAA;IACA,MAAA,IAAI8D,QAAQ,GAAG,IAAKT,CAAAA,GAAL,EAAf,CAAA;;IACA,MAAG,IAAA,IAAA,CAAKF,IAAR,EAAa;IACT,QAAKR,IAAAA,CAAAA,EAAL,CAAQW,IAAR,CAAa,KAAKb,EAAlB,EAAqBqB,QAArB,EAA8BD,QAA9B,CAAA,CAAA;IACH,OAAA;IACJ,KAAA;;;;;;IAGL,IAAIE,KAAK,GAAG,EAAZ,CAAA;IACA,IAAIN,GAAG,GAAG,EAAV,CAAA;IACA,IAAIO,OAAO,GAAG,KAAd,CAAA;;IAEA,SAASC,mBAAT,GAA+B;IAC3B,EAAIC,IAAAA,UAAU,GAAGH,KAAK,CAAClD,KAAN,CAAY,CAAZ,CAAjB,CAD2B;;IAE3BkD,EAAAA,KAAK,GAAG,EAAR,CAAA;IACAN,EAAAA,GAAG,GAAG,EAAN,CAAA;IACAO,EAAAA,OAAO,GAAG,KAAV,CAAA;IACAE,EAAAA,UAAU,CAAChI,OAAX,CAAmB,UAAAiI,CAAC,EAAA;IAAA,IAAIA,OAAAA,CAAC,CAACC,GAAF,EAAJ,CAAA;IAAA,GAApB,CAAA,CAAA;IACH,CAAA;;IACD,SAASR,YAAT,CAAsBxB,OAAtB,EAA+B;IAC3B,EAAA,IAAI1E,EAAE,GAAG0E,OAAO,CAAC1E,EAAjB,CAAA;;IACA,EAAA,IAAI,CAAC+F,GAAG,CAAC/F,EAAD,CAAR,EAAc;IAAG;IACb+F,IAAAA,GAAG,CAAC/F,EAAD,CAAH,GAAU,IAAV,CAAA;IACAqG,IAAAA,KAAK,CAAC9E,IAAN,CAAWmD,OAAX,CAAA,CAAA;;IAEA,IAAI,IAAA,CAAC4B,OAAL,EAAc;IACVK,MAAAA,QAAQ,CAACJ,mBAAD,CAAR,CAAA;IACAD,MAAAA,OAAO,GAAG,IAAV,CAAA;IACH,KAAA;IACJ,GAAA;IACJ,CAAA;;IAED,IAAIM,OAAO,GAAG,KAAd,CAAA;IACA,IAAIC,SAAS,GAAG,EAAhB,CAAA;;IACA,IAAIC,cAAc,GAAG,SAAjBA,cAAiB,GAAY;IAC7BF,EAAAA,OAAO,GAAG,KAAV,CAAA;IACA,EAAIG,IAAAA,GAAG,GAAGF,SAAS,CAAC1D,KAAV,CAAgB,CAAhB,CAAV,CAF6B;;IAG7B0D,EAAAA,SAAS,GAAG,EAAZ,CAAA;IACAE,EAAAA,GAAG,CAACvI,OAAJ,CAAY,UAAAyG,EAAE,EAAI;IACdA,IAAAA,EAAE,EAAA,CAAA;IACL,GAFD,CAAA,CAAA;IAGH,CAPD,CAAA;;IASA,IAAI+B,SAAJ,CAAA;;IACA,IAAIC,OAAJ,EAAa;IACTD,EAAAA,SAAS,GAAG,SAAM,SAAA,GAAA;IACdC,IAAAA,OAAO,CAACC,OAAR,EAAkBC,CAAAA,IAAlB,CAAuBL,cAAvB,CAAA,CAAA;IACH,GAFD,CAAA;IAGH,CAJD,MAIO,IAAIM,gBAAJ,EAAsB;IACzB,EAAA,IAAIC,QAAQ,GAAG,IAAID,gBAAJ,CAAqBN,cAArB,CAAf,CAAA;IACA,EAAA,IAAIQ,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,CAAxB,CAAf,CAAA;IACAH,EAAAA,QAAQ,CAACI,OAAT,CAAiBH,QAAjB,EAA2B;IACvBI,IAAAA,aAAa,EAAE,IAAA;IADQ,GAA3B,CAAA,CAAA;;IAGAV,EAAAA,SAAS,GAAG,SAAM,SAAA,GAAA;IACdM,IAAAA,QAAQ,CAACK,WAAT,GAAuB,CAAvB,CAAA;IACH,GAFD,CAAA;IAGH,CATM,MASA,IAAIC,YAAJ,EAAkB;IACrBZ,EAAAA,SAAS,GAAG,SAAM,SAAA,GAAA;IACdY,IAAAA,YAAY,CAACd,cAAD,CAAZ,CAAA;IACH,GAFD,CAAA;IAGH,CAJM,MAIA;IACHE,EAAAA,SAAS,GAAG,SAAM,SAAA,GAAA;IACda,IAAAA,UAAU,CAACf,cAAD,CAAV,CAAA;IACH,GAFD,CAAA;IAGH,CAAA;;IAEM,SAASH,QAAT,CAAkB1B,EAAlB,EAAsB;IAAK;IAC9B4B,EAAAA,SAAS,CAACtF,IAAV,CAAe0D,EAAf,CAAA,CAAA;;IACA,EAAI,IAAA,CAAC2B,OAAL,EAAc;IACVI,IAAAA,SAAS,CAACF,cAAD,CAAT,CAAA;IACAF,IAAAA,OAAO,GAAG,IAAV,CAAA;IACH,GAAA;IACJ;;ICvIM,SAASkB,kBAAT,CAA4B/C,EAA5B,EAA+B9D,GAA/B,EAAmC8G,IAAnC,EAAoD;IACvD,EAAGA,IAAAA,IAAI,IAAI,IAAX,EAAgB;IACZA,IAAAA,IAAI,GAAG,EAAP,CAAA;IACH,GAAA;;IACD,EAAA,IAAI9I,GAAG,GAAG8I,IAAI,CAAC9I,GAAf,CAAA;;IACA,EAAA,IAAGA,GAAH,EAAO;IACH,IAAO8I,OAAAA,IAAI,CAAC9I,GAAZ,CAAA;IACH,GAAA;;IAPsD,EAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAATmC,QAAS,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;IAATA,IAAAA,QAAS,CAAA,IAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;IAAA,GAAA;;IAQvD,EAAO4G,OAAAA,KAAK,CAACjD,EAAD,EAAI9D,GAAJ,EAAQhC,GAAR,EAAY8I,IAAZ,EAAiB3G,QAAjB,CAAZ,CAAA;IACH,CAAA;IAGM,SAAS6G,eAAT,CAAyBlD,EAAzB,EAA4BtD,IAA5B,EAAiC;IACpC,EAAA,OAAOuG,KAAK,CAACjD,EAAD,EAAIW,SAAJ,EAAcA,SAAd,EAAwBA,SAAxB,EAAkCA,SAAlC,EAA4CjE,IAA5C,CAAZ,CAAA;IACH,CAAA;IAGM,SAASyG,WAAT,CAAqBC,MAArB,EAA4BC,MAA5B,EAAmC;IACtC,EAAA,OAAOD,MAAM,CAAClH,GAAP,KAAemH,MAAM,CAACnH,GAAtB,IAA6BkH,MAAM,CAAClJ,GAAP,KAAemJ,MAAM,CAACnJ,GAA1D,CAAA;IACH;IAID;;IAGA,SAAS+I,KAAT,CAAejD,EAAf,EAAkB9D,GAAlB,EAAsBhC,GAAtB,EAA0B8I,IAA1B,EAA+B3G,QAA/B,EAAwCK,IAAxC,EAA6C;IACzC,EAAO,OAAA;IACHsD,IAAAA,EAAE,EAAFA,EADG;IAEH9D,IAAAA,GAAG,EAAHA,GAFG;IAGHhC,IAAAA,GAAG,EAAHA,GAHG;IAIH8I,IAAAA,IAAI,EAAJA,IAJG;IAKH3G,IAAAA,QAAQ,EAARA,QALG;IAMHK,IAAAA,IAAI,EAAJA,IAAAA;IANG,GAAP,CAAA;IAQH;;ICjCM,SAAS4G,SAAT,CAAmBL,KAAnB,EAA0B;IAC7B,EAAA,IAAM/G,GAAN,GAAoC+G,KAApC,CAAM/G,GAAN,CAAA;IAAA,MAAW8G,IAAX,GAAoCC,KAApC,CAAWD,IAAX,CAAA;IAAA,MAAoCC,KAApC,CAAiB5G,QAAjB,CAAA;IAAA,UAA2BK,IAA3B,GAAoCuG,KAApC,CAA2BvG,KAA3B;;IACA,EAAA,IAAI,OAAOR,GAAP,IAAc,QAAlB,EAA4B;IACxB+G,IAAAA,KAAK,CAACM,EAAN,GAAWf,QAAQ,CAACgB,aAAT,CAAuBtH,GAAvB,CAAX,CADwB;;IAExBuH,IAAAA,UAAU,CAACR,KAAK,CAACM,EAAP,EAAU,EAAV,EAAcP,IAAd,CAAV,CAAA;IACAC,IAAAA,KAAK,CAAC5G,QAAN,CAAe5C,OAAf,CAAuB,UAAAO,KAAK,EAAI;IAAG;IAC/BiJ,MAAAA,KAAK,CAACM,EAAN,CAASG,WAAT,CAAqBJ,SAAS,CAACtJ,KAAD,CAA9B,CAAA,CAAA;IACH,KAFD,CAAA,CAAA;IAGH,GAND,MAMO;IACHiJ,IAAAA,KAAK,CAACM,EAAN,GAAWf,QAAQ,CAACC,cAAT,CAAwB/F,IAAxB,CAAX,CAAA;IACH,GAAA;;IACD,EAAA,OAAOuG,KAAK,CAACM,EAAb,CAX6B;IAYhC,CAAA;IACM,SAASE,UAAT,CAAoBF,EAApB,EAA+C;IAAA,EAAxBI,IAAAA,QAAwB,uEAAb,EAAa,CAAA;IAAA,EAAVC,IAAAA,KAAU,uEAAJ,EAAI,CAAA;IAClD;IACA,EAAA,IAAIC,SAAS,GAAGF,QAAQ,CAACG,KAAT,IAAkB,EAAlC,CAAA;IACA,EAAA,IAAIC,SAAS,GAAGH,KAAK,CAACE,KAAN,IAAe,EAA/B,CAAA;;IACA,EAAA,KAAI,IAAI5J,GAAR,IAAe2J,SAAf,EAAyB;IACrB,IAAA,IAAG,CAACE,SAAS,CAAC7J,GAAD,CAAb,EAAmB;IACfqJ,MAAAA,EAAE,CAACO,KAAH,CAAS5J,GAAT,IAAgB,EAAhB,CAAA;IACH,KAAA;IACJ,GAAA;;IAED,EAAA,KAAI,IAAIA,IAAR,IAAeyJ,QAAf,EAAwB;IACpB,IAAA,IAAG,CAACC,KAAK,CAAC1J,IAAD,CAAT,EAAe;IACXqJ,MAAAA,EAAE,CAACS,eAAH,CAAmB9J,IAAnB,CAAA,CAAA;IACH,KAAA;IACJ,GAdiD;;;IAiBlD,EAAA,KAAK,IAAIA,KAAT,IAAgB0J,KAAhB,EAAuB;IACnB,IAAI1J,IAAAA,KAAG,IAAI,OAAX,EAAoB;IAChB,MAAA,KAAK,IAAI+J,SAAT,IAAsBL,KAAK,CAACE,KAA5B,EAAmC;IAC/BP,QAAAA,EAAE,CAACO,KAAH,CAASG,SAAT,CAAsBL,GAAAA,KAAK,CAACE,KAAN,CAAYG,SAAZ,CAAtB,CAAA;IACH,OAAA;IACJ,KAJD,MAIO;IACHV,MAAAA,EAAE,CAACW,YAAH,CAAgBhK,KAAhB,EAAqB0J,KAAK,CAAC1J,KAAD,CAA1B,CAAA,CAAA;IACH,KAAA;IACJ,GAAA;IACJ,CAAA;IAEM,SAASiK,KAAT,CAAeC,QAAf,EAAyBnB,KAAzB,EAAgC;IACnC,EAAA,IAAMoB,aAAa,GAAGD,QAAQ,CAACE,QAA/B,CAAA;;IAEA,EAAA,IAAID,aAAJ,EAAmB;IACf,IAAME,IAAAA,GAAG,GAAGH,QAAZ,CAAA;IACA,IAAA,IAAMI,SAAS,GAAGD,GAAG,CAACE,UAAtB,CAAA;IAEA,IAAA,IAAIC,MAAM,GAAGpB,SAAS,CAACL,KAAD,CAAtB,CAAA;IAEAuB,IAAAA,SAAS,CAACG,YAAV,CAAuBD,MAAvB,EAA+BH,GAAG,CAACK,WAAnC,CAAA,CAAA;IACAJ,IAAAA,SAAS,CAACK,WAAV,CAAsBN,GAAtB,CAAA,CAAA;IAGA,IAAA,OAAOG,MAAP,CAAA;IACH,GAXD,MAWO;IAEH,IAAA,OAAOI,UAAU,CAACV,QAAD,EAAUnB,KAAV,CAAjB,CAAA;IAEH,GAAA;IACJ,CAAA;;IAED,SAAU6B,UAAV,CAAqBV,QAArB,EAA8BnB,KAA9B,EAAoC;IAChC;IACA,EAAA,IAAI,CAACE,WAAW,CAACiB,QAAD,EAAWnB,KAAX,CAAhB,EAAmC;IAC/B,IAAA,IAAIM,GAAE,GAAGD,SAAS,CAACL,KAAD,CAAlB,CAAA;;IACAmB,IAAAA,QAAQ,CAACb,EAAT,CAAYkB,UAAZ,CAAuBM,YAAvB,CAAoCxB,GAApC,EAAwCa,QAAQ,CAACb,EAAjD,CAAA,CAAA;IACA,IAAA,OAAOA,GAAP,CAAA;IACH,GAN+B;;;IAUhC,EAAIA,IAAAA,EAAE,GAAGN,KAAK,CAACM,EAAN,GAAWa,QAAQ,CAACb,EAA7B,CAAA;;IACA,EAAA,IAAI,CAACa,QAAQ,CAAClI,GAAd,EAAmB;IACf,IAAA,IAAIkI,QAAQ,CAAC1H,IAAT,KAAkBuG,KAAK,CAACvG,IAA5B,EAAkC;IAC9B6G,MAAAA,EAAE,CAACX,WAAH,GAAiBK,KAAK,CAACvG,IAAvB,CAD8B;IAEjC,KAAA;IACJ,GAf+B;;;IAkBhC+G,EAAAA,UAAU,CAACF,EAAD,EAAIa,QAAQ,CAACpB,IAAb,EAAkBC,KAAK,CAACD,IAAxB,CAAV,CAlBgC;;IAuBhC,EAAA,IAAIgC,WAAW,GAAGZ,QAAQ,CAAC/H,QAAT,IAAqB,EAAvC,CAAA;IACA,EAAA,IAAI4I,WAAW,GAAGhC,KAAK,CAAC5G,QAAN,IAAkB,EAApC,CAAA;;IAEA,EAAG2I,IAAAA,WAAW,CAAClI,MAAZ,GAAqB,CAArB,IAA0BmI,WAAW,CAACnI,MAAZ,GAAqB,CAAlD,EAAoD;IAChDoI,IAAAA,cAAc,CAAC3B,EAAD,EAAIyB,WAAJ,EAAgBC,WAAhB,CAAd,CAAA;IACH,GAFD,MAEM,IAAGA,WAAW,CAACnI,MAAZ,GAAqB,CAAxB,EAA0B;IAC5BqI,IAAAA,aAAa,CAAC5B,EAAD,EAAI0B,WAAJ,CAAb,CAAA;IACH,GAFK,MAEA,IAAGD,WAAW,CAAClI,MAAZ,GAAqB,CAAxB,EAA0B;IAC5ByG,IAAAA,EAAE,CAAC6B,SAAH,GAAe,EAAf,CAAA;IACH,GAAA;;IAGD,EAAA,OAAO7B,EAAP,CAAA;IACH,CAAA;;IAED,SAAS4B,aAAT,CAAuB5B,EAAvB,EAA0B0B,WAA1B,EAAsC;IAClC,EAAA,KAAI,IAAInH,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACmH,WAAW,CAACnI,MAA1B,EAAiCgB,CAAC,EAAlC,EAAqC;IACjC,IAAA,IAAI9D,KAAK,GAAGiL,WAAW,CAACnH,CAAD,CAAvB,CAAA;IACAyF,IAAAA,EAAE,CAACG,WAAH,CAAeJ,SAAS,CAACtJ,KAAD,CAAxB,CAAA,CAAA;IACH,GAAA;IACJ,CAAA;;IAGD,SAASkL,cAAT,CAAwB3B,EAAxB,EAA2ByB,WAA3B,EAAuCC,WAAvC,EAAmD;IAC/C;IACA,EAAII,IAAAA,aAAa,GAAG,CAApB,CAAA;IACA,EAAIC,IAAAA,aAAa,GAAG,CAApB,CAAA;IACA,EAAA,IAAIC,WAAW,GAAGP,WAAW,CAAClI,MAAZ,GAAqB,CAAvC,CAAA;IACA,EAAA,IAAI0I,WAAW,GAAGP,WAAW,CAACnI,MAAZ,GAAqB,CAAvC,CAAA;IAEA,EAAA,IAAI2I,aAAa,GAAGT,WAAW,CAAC,CAAD,CAA/B,CAAA;IACA,EAAA,IAAIU,aAAa,GAAGT,WAAW,CAAC,CAAD,CAA/B,CAAA;IAEA,EAAA,IAAIU,WAAW,GAAGX,WAAW,CAACO,WAAD,CAA7B,CAAA;IACA,EAAA,IAAIK,WAAW,GAAGX,WAAW,CAACO,WAAD,CAA7B,CAAA;;IAEA,EAASK,SAAAA,cAAT,CAAwBxJ,QAAxB,EAAiC;IAC7B,IAAI2C,IAAAA,GAAG,GAAG,EAAV,CAAA;IACA3C,IAAAA,QAAQ,CAAC5C,OAAT,CAAiB,UAACO,KAAD,EAAO4E,KAAP,EAAiB;IAC9BI,MAAAA,GAAG,CAAChF,KAAK,CAACE,GAAP,CAAH,GAAiB0E,KAAjB,CAAA;IACH,KAFD,CAAA,CAAA;IAGA,IAAA,OAAOI,GAAP,CAAA;IACH,GAAA;;IAED,EAAA,IAAIA,GAAG,GAAG6G,cAAc,CAACb,WAAD,CAAxB,CArB+C;;IAyB/C,EAAA,OAAMK,aAAa,IAAIE,WAAjB,IAAgCD,aAAa,IAAIE,WAAvD,EAAmE;IAAG;IAClE,IAAG,IAAA,CAACC,aAAJ,EAAkB;IAAG;IACjBA,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAH,CAA3B,CAAA;IACH,KAFD,MAEM,IAAG,CAACM,WAAJ,EAAgB;IAClBA,MAAAA,WAAW,GAAGX,WAAW,CAAC,EAAEO,WAAH,CAAzB,CAAA;IACH,KAFK,MAEA,IAAGpC,WAAW,CAACsC,aAAD,EAAeC,aAAf,CAAd,EAA4C;IAC9CZ,MAAAA,UAAU,CAACW,aAAD,EAAeC,aAAf,CAAV,CAAA;IACAD,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAH,CAA3B,CAAA;IACAK,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAH,CAA3B,CAAA;IACH,KAJK,MAIA,IAAGnC,WAAW,CAACwC,WAAD,EAAaC,WAAb,CAAd,EAAwC;IAAG;IAC7Cd,MAAAA,UAAU,CAACa,WAAD,EAAaC,WAAb,CAAV,CAAA;IACAD,MAAAA,WAAW,GAAGX,WAAW,CAAC,EAAEO,WAAH,CAAzB,CAAA;IACAK,MAAAA,WAAW,GAAGX,WAAW,CAAC,EAAEO,WAAH,CAAzB,CAAA;IACH,KAJK,MAIA,IAAGrC,WAAW,CAACwC,WAAD,EAAaD,aAAb,CAAd,EAA0C;IAAE;IAC9CZ,MAAAA,UAAU,CAACa,WAAD,EAAaD,aAAb,CAAV,CAAA;IACAnC,MAAAA,EAAE,CAACoB,YAAH,CAAgBgB,WAAW,CAACpC,EAA5B,EAA+BkC,aAAa,CAAClC,EAA7C,CAAA,CAAA;IACAoC,MAAAA,WAAW,GAAGX,WAAW,CAAC,EAAEO,WAAH,CAAzB,CAAA;IACAG,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAH,CAA3B,CAAA;IACH,KALK,MAKA,IAAGnC,WAAW,CAACsC,aAAD,EAAeG,WAAf,CAAd,EAA0C;IAAC;IAC7Cd,MAAAA,UAAU,CAACW,aAAD,EAAeG,WAAf,CAAV,CAAA;IACArC,MAAAA,EAAE,CAACoB,YAAH,CAAgBc,aAAa,CAAClC,EAA9B,EAAiCoC,WAAW,CAACpC,EAAZ,CAAeqB,WAAhD,EAF4C;;IAG5CgB,MAAAA,WAAW,GAAGX,WAAW,CAAC,EAAEO,WAAH,CAAzB,CAAA;IACAC,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAH,CAA3B,CAAA;IACH,KALK,MAKA;IACF,MAAA,IAAIS,SAAS,GAAG9G,GAAG,CAAC0G,aAAa,CAACxL,GAAf,CAAnB,CAAA;;IACA,MAAG4L,IAAAA,SAAS,KAAKnF,SAAjB,EAA2B;IACvB,QAAA,IAAIoF,SAAS,GAAGf,WAAW,CAACc,SAAD,CAA3B,CAAA;IACAvC,QAAAA,EAAE,CAACoB,YAAH,CAAgBoB,SAAS,CAACxC,EAA1B,EAA6BkC,aAAa,CAAClC,EAA3C,CAAA,CAAA;IACAyB,QAAAA,WAAW,CAACc,SAAD,CAAX,GAAyBnF,SAAzB,CAHuB;;IAIvBmE,QAAAA,UAAU,CAACiB,SAAD,EAAWL,aAAX,CAAV,CAAA;IACH,OALD,MAKK;IACDnC,QAAAA,EAAE,CAACoB,YAAH,CAAgBrB,SAAS,CAACoC,aAAD,CAAzB,EAAyCD,aAAa,CAAClC,EAAvD,CAAA,CAAA;IACH,OAAA;;IAEDmC,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAH,CAA3B,CAXE;IAYL,KAAA;IAEJ,GAAA;;IACD,EAAGA,IAAAA,aAAa,IAAIE,WAApB,EAAgC;IAC5B,IAAI,KAAA,IAAI1H,CAAC,GAAGwH,aAAZ,EAA0BxH,CAAC,IAAI0H,WAA/B,EAA2C1H,CAAC,EAA5C,EAA+C;IAC3C,MAAIkI,IAAAA,OAAO,GAAG1C,SAAS,CAAC2B,WAAW,CAACnH,CAAD,CAAZ,CAAvB,CAAA;IAEA,MAAA,IAAImI,MAAM,GAAGhB,WAAW,CAACK,aAAa,GAAG,CAAjB,CAAX,GAA+BL,WAAW,CAACK,aAAa,GAAG,CAAjB,CAAX,CAA+B/B,EAA9D,GAAiE,IAA9E,CAAA;IAEAA,MAAAA,EAAE,CAACoB,YAAH,CAAgBqB,OAAhB,EAAwBC,MAAxB,EAL2C;IAM9C,KAAA;IACJ,GAAA;;IACD,EAAGZ,IAAAA,aAAa,IAAIE,WAApB,EAAgC;IAC5B,IAAI,KAAA,IAAIzH,EAAC,GAACuH,aAAV,EAAwBvH,EAAC,IAAEyH,WAA3B,EAAuCzH,EAAC,EAAxC,EAA2C;IACvC,MAAA,IAAGkH,WAAW,CAAClH,EAAD,CAAd,EAAkB;IACd,QAAA,IAAIoI,KAAK,GAAGlB,WAAW,CAAClH,EAAD,CAAX,CAAeyF,EAA3B,CAAA;IACAA,QAAAA,EAAE,CAACsB,WAAH,CAAeqB,KAAf,CAAA,CAAA;IACH,OAAA;IACJ,KAAA;IACJ,GAAA;IACJ;IAOD;IACA;IACA;IACA;IACA;IACA;IACA;;IAIA;IACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;ICrNO,SAASC,aAAT,CAAuB7L,GAAvB,EAA4B;IAC/BA,EAAAA,GAAG,CAACK,SAAJ,CAAcyL,OAAd,GAAwB,UAAUnD,KAAV,EAAiB;IACrC,IAAMjD,IAAAA,EAAE,GAAG,IAAX,CAAA;IACA,IAAA,IAAMuD,EAAE,GAAGvD,EAAE,CAACqG,GAAd,CAAA;IAEA,IAAA,IAAMC,SAAS,GAAGtG,EAAE,CAACuG,MAArB,CAAA;IACAvG,IAAAA,EAAE,CAACuG,MAAH,GAAYtD,KAAZ,CAAA;;IAEA,IAAA,IAAGqD,SAAH,EAAa;IACTtG,MAAAA,EAAE,CAACqG,GAAH,GAASlC,KAAK,CAACmC,SAAD,EAAWrD,KAAX,CAAd,CAAA;IACH,KAFD,MAEK;IACDjD,MAAAA,EAAE,CAACqG,GAAH,GAASlC,KAAK,CAACZ,EAAD,EAAKN,KAAL,CAAd,CAAA;IACH,KAAA;IAIJ,GAfD,CAAA;;IAgBA3I,EAAAA,GAAG,CAACK,SAAJ,CAAc6L,EAAd,GAAmB,YAAY;IAC3B,IAAA,OAAOzD,kBAAkB,CAAlB,KAAA,CAAA,KAAA,CAAA,EAAA,CAAmB,IAAnB,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAA4B0D,SAA5B,CAAP,CAAA,CAAA,CAAA;IACH,GAFD,CAAA;;IAGAnM,EAAAA,GAAG,CAACK,SAAJ,CAAc+L,EAAd,GAAmB,YAAY;IAC3B,IAAA,OAAOxD,eAAe,CAAf,KAAA,CAAA,KAAA,CAAA,EAAA,CAAgB,IAAhB,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAyBuD,SAAzB,CAAP,CAAA,CAAA,CAAA;IACH,GAFD,CAAA;;IAGAnM,EAAAA,GAAG,CAACK,SAAJ,CAAcgM,EAAd,GAAmB,UAAUpJ,KAAV,EAAiB;IAChC,IAAA,IAAI,QAAOA,KAAP,CAAA,KAAiB,QAArB,EAA+B,OAAOA,KAAP,CAAA;IAC/B,IAAA,OAAOW,IAAI,CAACC,SAAL,CAAeZ,KAAf,CAAP,CAAA;IACH,GAHD,CAAA;;IAIAjD,EAAAA,GAAG,CAACK,SAAJ,CAAciM,OAAd,GAAwB,YAAY;IAChC,IAAA,IAAI5G,EAAE,GAAG,IAAT,CADgC;;IAGhC,IAAOA,OAAAA,EAAE,CAAC6G,QAAH,CAAYxH,MAAZ,CAAmBwB,IAAnB,CAAwBb,EAAxB,CAAP,CAAA;IACH,GAJD,CAAA;IAKH,CAAA;IAGM,SAAS8G,cAAT,CAAwB9G,EAAxB,EAA4BuD,EAA5B,EAAgC;IACnCvD,EAAAA,EAAE,CAACqG,GAAH,GAAS9C,EAAT,CAAA;;IAGA,EAAA,IAAMwD,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC1B/G,IAAAA,EAAE,CAACoG,OAAH,CAAWpG,EAAE,CAAC4G,OAAH,EAAX,CAAA,CAAA;IACH,GAFD,CAAA;;IAIA,EAAA,IAAI7G,OAAJ,CAAYC,EAAZ,EAAgB+G,eAAhB,EAAiC,IAAjC,CAAA,CAAA;IAEH,CAAA;IAID;IACA;IACA;IACA;IACA;;IAEO,SAASC,QAAT,CAAkBhH,EAAlB,EAAsBtG,IAAtB,EAA4B;IAAG;IAClC,EAAA,IAAIuN,QAAQ,GAAGjH,EAAE,CAAC6G,QAAH,CAAYnN,IAAZ,CAAf,CAAA;;IACA,EAAA,IAAIuN,QAAJ,EAAc;IACVA,IAAAA,QAAQ,CAACxN,OAAT,CAAiB,UAAAyN,OAAO,EAAA;IAAA,MAAA,OAAIA,OAAO,CAACrG,IAAR,CAAab,EAAb,CAAJ,CAAA;IAAA,KAAxB,CAAA,CAAA;IACH,GAAA;IACJ;;ICpED;IACA,IAAImH,aAAa,GAAGC,KAAK,CAACzM,SAA1B,CAAA;IAEO,IAAI0M,aAAa,GAAGzM,MAAM,CAACC,MAAP,CAAcsM,aAAd,CAApB;IAGP;;IACA,IAAIG,OAAO,GAAG,CACV,MADU,EAEV,KAFU;IAGV,OAHU;IAIV,SAJU,EAKV,SALU,EAMV,MANU,EAOV,QAPU;IAAA,CAAd;IAUA;;IAIAA,OAAO,CAAC7N,OAAR,CAAgB,UAAA8N,MAAM,EAAI;IACtBF,EAAAA,aAAa,CAACE,MAAD,CAAb,GAAwB,YAAiB;IAAA,IAAA,IAAA,qBAAA,CAAA;;IAAA,IAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAALC,IAAK,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;IAALA,MAAAA,IAAK,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;IAAA,KAAA;;IAAE;IACvC,IAAA,IAAMC,MAAM,GAAG,CAAAN,qBAAAA,GAAAA,aAAa,CAACI,MAAD,CAAb,EAAsB1G,IAAtB,+BAA2B,IAA3B,CAAA,CAAA,MAAA,CAAmC2G,IAAnC,CAAA,CAAf,CADqC;IAGrC;;;IACA,IAAA,IAAIE,QAAJ,CAAA;IACA,IAAIC,IAAAA,EAAE,GAAG,IAAA,CAAKC,MAAd,CAAA;;IACA,IAAA,QAAQL,MAAR;IACI,MAAA,KAAK,MAAL,CAAA;IACA,MAAA,KAAK,SAAL;IACIG,QAAAA,QAAQ,GAAGF,IAAX,CAAA;;IACJ,MAAA,KAAK,QAAL;IACIE,QAAAA,QAAQ,GAAGF,IAAI,CAACpJ,KAAL,CAAW,CAAX,CAAX,CAAA;IALR,KAAA;;IAUA,IAAA,IAAGsJ,QAAH,EAAY;IACRC,MAAAA,EAAE,CAACE,UAAH,CAAcH,QAAd,CAAA,CAAA;IACH,KAlBoC;;;IAqBrCC,IAAAA,EAAE,CAAC5G,GAAH,CAAO+G,MAAP,EAAA,CAAA;IACA,IAAA,OAAOL,MAAP,CAAA;IACH,GAvBD,CAAA;IAwBH,CAzBD,CAAA;;QClBMM;IACF,EAAA,SAAA,QAAA,CAAY/E,IAAZ,EAAiB;IAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,CAAA,CAAA;;IACb;IAEA,IAAA,IAAA,CAAKjC,GAAL,GAAW,IAAIxB,GAAJ,EAAX,CAHa;;IAOb3E,IAAAA,MAAM,CAACoN,cAAP,CAAsBhF,IAAtB,EAA2B,QAA3B,EAAoC;IAChCzF,MAAAA,KAAK,EAAC,IAD0B;IAEhC0K,MAAAA,UAAU,EAAC,KAFqB;;IAAA,KAApC,EAPa;IAYb;;IACA,IAAA,IAAGb,KAAK,CAACc,OAAN,CAAclF,IAAd,CAAH,EAAuB;IACnB,MAAK6E,IAAAA,CAAAA,UAAL,CAAgB7E,IAAhB,CAAA,CAAA;IACAA,MAAAA,IAAI,CAACmF,SAAL,GAAiBd,aAAjB,CAAA;IACH,KAHD,MAGK;IACD,MAAKe,IAAAA,CAAAA,IAAL,CAAUpF,IAAV,CAAA,CAAA;IACH,KAAA;IACJ,GAAA;;;;IACD,IAAA,KAAA,EAAA,SAAA,IAAA,CAAKA,IAAL,EAAU;IAAE;IACR;IACApI,MAAAA,MAAM,CAACyN,IAAP,CAAYrF,IAAZ,CAAkBvJ,CAAAA,OAAlB,CAA0B,UAAAS,GAAG,EAAA;IAAA,QAAIoO,OAAAA,cAAc,CAACtF,IAAD,EAAM9I,GAAN,EAAU8I,IAAI,CAAC9I,GAAD,CAAd,CAAlB,CAAA;IAAA,OAA7B,CAAA,CAAA;IACH,KAAA;;;IACD,IAAA,KAAA,EAAA,SAAA,UAAA,CAAW8I,IAAX,EAAgB;IACZA,MAAAA,IAAI,CAACvJ,OAAL,CAAa,UAAAwE,IAAI,EAAA;IAAA,QAAIyE,OAAAA,OAAO,CAACzE,IAAD,CAAX,CAAA;IAAA,OAAjB,EADY;IAEf,KAAA;;;;;;IAIL,SAASsK,WAAT,CAAqBhL,KAArB,EAA2B;IACvB,EAAA,KAAI,IAAIO,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACP,KAAK,CAACT,MAApB,EAA2BgB,CAAC,EAA5B,EAA+B;IAC3B,IAAA,IAAI0K,OAAO,GAAGjL,KAAK,CAACO,CAAD,CAAnB,CAAA;IACA0K,IAAAA,OAAO,CAACZ,MAAR,IAAkBY,OAAO,CAACZ,MAAR,CAAe7G,GAAf,CAAmBD,MAAnB,EAAlB,CAAA;;IACA,IAAA,IAAGsG,KAAK,CAACc,OAAN,CAAcM,OAAd,CAAH,EAA0B;IACtBD,MAAAA,WAAW,CAACC,OAAD,CAAX,CAAA;IACH,KAAA;IACJ,GAAA;IACJ,CAAA;;IACM,SAASF,cAAT,CAAwB7I,MAAxB,EAA+BvF,GAA/B,EAAmCqD,KAAnC,EAAyC;IAAE;IAC9C,EAAA,IAAIkL,OAAO,GAAG/F,OAAO,CAACnF,KAAD,CAArB,CAAA;IACA,EAAA,IAAIwD,GAAG,GAAG,IAAIxB,GAAJ,EAAV,CAF4C;;IAG5C3E,EAAAA,MAAM,CAACoN,cAAP,CAAsBvI,MAAtB,EAA6BvF,GAA7B,EAAiC;IAC7B0G,IAAAA,GAD6B,EACxB,SAAA,GAAA,GAAA;IACD,MAAGrB,IAAAA,GAAG,CAACE,MAAP,EAAc;IACVsB,QAAAA,GAAG,CAACD,MAAJ,EAAA,CADU;;IAEV,QAAA,IAAG2H,OAAH,EAAW;IACPA,UAAAA,OAAO,CAAC1H,GAAR,CAAYD,MAAZ,GADO;;IAGP,UAAA,IAAGsG,KAAK,CAACc,OAAN,CAAc3K,KAAd,CAAH,EAAwB;IACpBgL,YAAAA,WAAW,CAAChL,KAAD,CAAX,CAAA;IACH,WAAA;IACJ,SAAA;IACJ,OAAA;;IACD,MAAA,OAAOA,KAAP,CAAA;IACH,KAb4B;IAc7BmL,IAAAA,GAd6B,EAczBrH,SAAAA,GAAAA,CAAAA,QAdyB,EAchB;IACT,MAAG9D,IAAAA,KAAK,KAAK8D,QAAb,EAAsB,OAAA;IACtB9D,MAAAA,KAAK,GAAG8D,QAAR,CAAA;IACAN,MAAAA,GAAG,CAAC+G,MAAJ,EAAA,CAHS;IAIZ,KAAA;IAlB4B,GAAjC,CAAA,CAAA;IAoBH,CAAA;IAEM,SAASpF,OAAT,CAAkBM,IAAlB,EAAuB;IAC1B;IACA,EAAG,IAAA,OAAA,CAAOA,IAAP,CAAgB,KAAA,QAAhB,IAA4BA,IAAI,IAAI,IAAvC,EAA4C,OAAA;IAE5C,EAAGA,IAAAA,IAAI,CAAC4E,MAAL,YAAuBG,QAA1B,EAAmC,OAAO/E,IAAI,CAAC4E,MAAZ,CAJT;;IAM1B,EAAA,OAAO,IAAIG,QAAJ,CAAa/E,IAAb,CAAP,CAAA;IACH;IAID;IAGA;IAGA;;ICjFO,SAAS2F,SAAT,CAAmB3I,EAAnB,EAAuB;IAC1B,EAAA,IAAI4I,IAAI,GAAG5I,EAAE,CAAC6G,QAAd,CAAA;;IACA,EAAI+B,IAAAA,IAAI,CAAC5F,IAAT,EAAe;IACX6F,IAAAA,QAAQ,CAAC7I,EAAD,CAAR,CAAA;IACH,GAAA;;IACD,EAAI4I,IAAAA,IAAI,CAACE,QAAT,EAAmB;IACfC,IAAAA,YAAY,CAAC/I,EAAD,CAAZ,CAAA;IACH,GAAA;;IACD,EAAG4I,IAAAA,IAAI,CAACI,KAAR,EAAc;IACVC,IAAAA,SAAS,CAACjJ,EAAD,CAAT,CAAA;IACH,GAAA;IACJ,CAAA;;IAED,SAASiJ,SAAT,CAAmBjJ,EAAnB,EAAsB;IAClB,EAAA,IAAIgJ,KAAK,GAAGhJ,EAAE,CAAC6G,QAAH,CAAYmC,KAAxB,CAAA;;IAEA,EAAA,KAAI,IAAI9O,GAAR,IAAe8O,KAAf,EAAqB;IACjB,IAAA,IAAM9B,OAAO,GAAG8B,KAAK,CAAC9O,GAAD,CAArB,CADiB;;IAGjB,IAAA,IAAGkN,KAAK,CAACc,OAAN,CAAchB,OAAd,CAAH,EAA0B;IACtB,MAAA,KAAI,IAAIpJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACoJ,OAAO,CAACpK,MAAtB,EAA6BgB,CAAC,EAA9B,EAAiC;IAC7BoL,QAAAA,aAAa,CAAClJ,EAAD,EAAI9F,GAAJ,EAAQgN,OAAO,CAACpJ,CAAD,CAAf,CAAb,CAAA;IACH,OAAA;IACJ,KAJD,MAIK;IACDoL,MAAAA,aAAa,CAAClJ,EAAD,EAAI9F,GAAJ,EAAQgN,OAAR,CAAb,CAAA;IACH,KAAA;IACJ,GAAA;IACJ,CAAA;;IAED,SAASgC,aAAT,CAAuBlJ,EAAvB,EAA0B9F,GAA1B,EAA8BgN,OAA9B,EAAsC;IAClC;IACA,EAAA,IAAG,OAAOA,OAAP,IAAkB,QAArB,EAA8B;IAC1BA,IAAAA,OAAO,GAAGlH,EAAE,CAACkH,OAAD,CAAZ,CAAA;IACH,GAAA;;IAED,EAAA,OAAOlH,EAAE,CAACmJ,MAAH,CAAUjP,GAAV,EAAcgN,OAAd,CAAP,CAAA;IACH,CAAA;;IAED,SAASkC,KAAT,CAAepJ,EAAf,EAAmBP,MAAnB,EAA2BvF,GAA3B,EAAgC;IAC5BU,EAAAA,MAAM,CAACoN,cAAP,CAAsBhI,EAAtB,EAA0B9F,GAA1B,EAA+B;IAC3B0G,IAAAA,GAD2B,EACrB,SAAA,GAAA,GAAA;IAAG;IACL,MAAA,OAAOZ,EAAE,CAACP,MAAD,CAAF,CAAWvF,GAAX,CAAP,CAAA;IACH,KAH0B;IAI3BwO,IAAAA,GAJ2B,EAIvBrH,SAAAA,GAAAA,CAAAA,QAJuB,EAIb;IAAE;IACZ,MAAIA,IAAAA,QAAQ,KAAKrB,EAAE,CAACP,MAAD,CAAF,CAAWvF,GAAX,CAAjB,EAAkC,OAAA;IAClC8F,MAAAA,EAAE,CAACP,MAAD,CAAF,CAAWvF,GAAX,IAAkBmH,QAAlB,CAAA;IACH,KAAA;IAP0B,GAA/B,CAAA,CAAA;IASH,CAAA;;IAED,SAASwH,QAAT,CAAkB7I,EAAlB,EAAsB;IAClB,EAAA,IAAIgD,IAAI,GAAGhD,EAAE,CAAC6G,QAAH,CAAY7D,IAAvB,CAAA;IACAA,EAAAA,IAAI,GAAG,OAAOA,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAACnC,IAAL,CAAUb,EAAV,CAA7B,GAA6CgD,IAApD,CAFkB;;IAGlBhD,EAAAA,EAAE,CAACqJ,KAAH,GAAWrG,IAAX,CAHkB;;IAIlBN,EAAAA,OAAO,CAACM,IAAD,CAAP,CAJkB;;IAQlB,EAAA,KAAK,IAAI9I,GAAT,IAAgB8I,IAAhB,EAAsB;IAClBoG,IAAAA,KAAK,CAACpJ,EAAD,EAAK,OAAL,EAAc9F,GAAd,CAAL,CAAA;IACH,GAAA;IACJ,CAAA;;IAGD,SAAS6O,YAAT,CAAsB/I,EAAtB,EAA0B;IACtB,EAAA,IAAM8I,QAAQ,GAAG9I,EAAE,CAAC6G,QAAH,CAAYiC,QAA7B,CAAA;IACA,EAAA,IAAMQ,QAAQ,GAAGtJ,EAAE,CAACuJ,iBAAH,GAAuB,EAAxC,CAAA;;IACA,EAAA,KAAK,IAAIrP,GAAT,IAAgB4O,QAAhB,EAA0B;IACtB,IAAA,IAAIU,OAAO,GAAGV,QAAQ,CAAC5O,GAAD,CAAtB,CADsB;IAGtB;;IACA,IAAIuP,IAAAA,EAAE,GAAG,OAAOD,OAAP,IAAkB,UAAlB,GAA+BA,OAA/B,GAAyCA,OAAO,CAAC5I,GAA1D,CAAA;IACA0I,IAAAA,QAAQ,CAACpP,GAAD,CAAR,GAAgB,IAAI6F,OAAJ,CAAYC,EAAZ,EAAgByJ,EAAhB,EAAoB;IAAEjJ,MAAAA,IAAI,EAAE,IAAA;IAAR,KAApB,CAAhB,CALsB;;IAOtBkJ,IAAAA,cAAc,CAAC1J,EAAD,EAAK9F,GAAL,EAAUsP,OAAV,CAAd,CAAA;IACH,GAAA;IACJ,CAAA;;IAED,SAASE,cAAT,CAAwBjK,MAAxB,EAAgCvF,GAAhC,EAAqCsP,OAArC,EAA8C;IAC1C,EAAMG,IAAAA,MAAM,GAAGH,OAAO,CAACd,GAAR,IAAgB,YAAM,EAArC,CAD0C;;;IAI1C9N,EAAAA,MAAM,CAACoN,cAAP,CAAsBvI,MAAtB,EAA8BvF,GAA9B,EAAmC;IAC/B0G,IAAAA,GAAG,EAAEgJ,oBAAoB,CAAC1P,GAAD,CADM;IAE/BwO,IAAAA,GAAG,EAAEiB,MAAAA;IAF0B,GAAnC,CAAA,CAAA;IAIH,CAAA;;IAED,SAASC,oBAAT,CAA8B1P,GAA9B,EAAmC;IAC/B,EAAA,OAAO,YAAY;IACf,IAAA,IAAMyF,OAAO,GAAG,IAAA,CAAK4J,iBAAL,CAAuBrP,GAAvB,CAAhB,CAAA;;IACA,IAAIyF,IAAAA,OAAO,CAACc,KAAZ,EAAmB;IACfd,MAAAA,OAAO,CAACkK,QAAR,EAAA,CAAA;IACH,KAAA;;IACD,IAAItK,IAAAA,GAAG,CAACE,MAAR,EAAgB;IAAE;IACdE,MAAAA,OAAO,CAACmB,MAAR,EAAA,CAAA;IACH,KAAA;;IAED,IAAOnB,OAAAA,OAAO,CAACpC,KAAf,CAAA;IACH,GAVD,CAAA;IAWH,CAAA;;IAEM,SAASuM,cAAT,CAAwBxP,GAAxB,EAA4B;IAC/BA,EAAAA,GAAG,CAACK,SAAJ,CAAcoP,SAAd,GAA0BnI,QAA1B,CAAA;;IACAtH,EAAAA,GAAG,CAACK,SAAJ,CAAcwO,MAAd,GAAuB,UAASlJ,QAAT,EAAkBC,EAAlB,EAAqB;IACxC;IACA,IAAA,IAAIH,OAAJ,CAAY,IAAZ,EAAiBE,QAAjB,EAA0B;IAACS,MAAAA,IAAI,EAAC,IAAA;IAAN,KAA1B,EAAsCR,EAAtC,CAAA,CAFwC;IAG3C,GAHD,CAAA;IAIH;IAOD;;IAIA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;AACA;IACA;;IC/HO,SAAS8J,SAAT,CAAmB1P,GAAnB,EAAuB;IAC1BA,EAAAA,GAAG,CAACK,SAAJ,CAAcD,KAAd,GAAsB,UAAST,OAAT,EAAiB;IAAG;IACtC,IAAM+F,IAAAA,EAAE,GAAG,IAAX,CAAA;IACAA,IAAAA,EAAE,CAAC6G,QAAH,GAAc/M,aAAa,CAAC,IAAA,CAAKgB,WAAL,CAAiBb,OAAlB,EAA0BA,OAA1B,CAA3B,CAFmC;;IAInC+M,IAAAA,QAAQ,CAAChH,EAAD,EAAI,eAAJ,CAAR,CAJmC;;IAMnC2I,IAAAA,SAAS,CAAC3I,EAAD,CAAT,CAAA;IACAgH,IAAAA,QAAQ,CAAChH,EAAD,EAAI,SAAJ,CAAR,CAPmC;;IAUnC,IAAG/F,IAAAA,OAAO,CAACsJ,EAAX,EAAc;IACVvD,MAAAA,EAAE,CAACiK,MAAH,CAAUhQ,OAAO,CAACsJ,EAAlB,EADU;IAEb,KAAA;IACJ,GAbD,CAAA;;IAgBAjJ,EAAAA,GAAG,CAACK,SAAJ,CAAcsP,MAAd,GAAuB,UAAS1G,EAAT,EAAY;IAC/B,IAAMvD,IAAAA,EAAE,GAAG,IAAX,CAAA;IACAuD,IAAAA,EAAE,GAAGf,QAAQ,CAAC0H,aAAT,CAAuB3G,EAAvB,CAAL,CAAA;IACA,IAAA,IAAIqF,IAAI,GAAG5I,EAAE,CAAC6G,QAAd,CAAA;;IACA,IAAA,IAAG,CAAC+B,IAAI,CAACvJ,MAAT,EAAgB;IACZ,MAAA,IAAID,QAAJ,CAAA;;IACA,MAAA,IAAG,CAACwJ,IAAI,CAACxJ,QAAN,IAAkBmE,EAArB,EAAwB;IACpBnE,QAAAA,QAAQ,GAAGmE,EAAE,CAAC4G,SAAd,CAAA;IACH,OAFD,MAEK;IACD,QAAA,IAAG5G,EAAH,EAAM;IACFnE,UAAAA,QAAQ,GAAGwJ,IAAI,CAACxJ,QAAhB,CAAA;IACH,SAAA;IACJ,OARW;IAWZ;;;IAEA,MAAGA,IAAAA,QAAQ,IAAImE,EAAf,EAAkB;IACd,QAAA,IAAMlE,MAAM,GAAGF,iBAAiB,CAACC,QAAD,CAAhC,CAAA;IACAwJ,QAAAA,IAAI,CAACvJ,MAAL,GAAcA,MAAd,CAAA;IACH,OAAA;IACJ,KAAA;;IAEDyH,IAAAA,cAAc,CAAC9G,EAAD,EAAIuD,EAAJ,CAAd,CAvB+B;IAwBlC,GAxBD,CAAA;IAyBH;;IC1CD,SAASjJ,GAAT,CAAaL,OAAb,EAAsB;IAClB,EAAKS,IAAAA,CAAAA,KAAL,CAAWT,OAAX,CAAA,CAAA;IACH,CAAA;;IAGD+P,SAAS,CAAC1P,GAAD,CAAT;;IACA6L,aAAa,CAAC7L,GAAD,CAAb,CAAA;IACAD,aAAa,CAACC,GAAD,CAAb,CAAA;IACAwP,cAAc,CAACxP,GAAD,CAAd;;;;;;;;"}